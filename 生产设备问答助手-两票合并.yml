app:
  description: ''
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: advanced-chat
  name: 生产设备问答助手-两票合并
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/openai_api_compatible:0.0.19@219552f62b54919d6fd317c737956d3b2cc97719b85f0179bb995e5a512b7ebb
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: jaguarliuu/rookie_text2data:1.0.1@283ae7f3c0991a6d64141308b5ff7a3db35c7c02daf46f7e3fd9f5b5826b8b17
kind: app
version: 0.3.1
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 10
        file_size_limit: 50
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      config:
        inputs_config:
          enabled: true
          preset_response: 您查询的信息属于受控安全信息，暂无权限访问，无法为您提供具体数据！请重新提问。
        keywords: '水冲击

          断裂

          失控

          烧毁

          失磁

          火灾

          停运

          瘫痪

          泄露

          放炮

          爆炸

          停机

          非停'
        outputs_config:
          enabled: false
      enabled: true
      type: keywords
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: llm-source-1752038279481-target
      selected: false
      source: llm
      sourceHandle: source
      target: '1752038279481'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1752038483796-source-1752040543720-target
      selected: false
      source: '1752038483796'
      sourceHandle: source
      target: '1752040543720'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1752038498570-source-1752040601965-target
      selected: false
      source: '1752038498570'
      sourceHandle: source
      target: '1752040601965'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 1752040543720-source-1752040747851-target
      selected: false
      source: '1752040543720'
      sourceHandle: source
      target: '1752040747851'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 1752040601965-source-1752040913487-target
      selected: false
      source: '1752040601965'
      sourceHandle: source
      target: '1752040913487'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1752040049164-source-1752197476923-target
      source: '1752040049164'
      sourceHandle: source
      target: '1752197476923'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: http-request
      id: 1752197476923-source-1752196164770-target
      source: '1752197476923'
      sourceHandle: source
      target: '1752196164770'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1752224587022-source-1752224877319-target
      source: '1752224587022'
      sourceHandle: source
      target: '1752224877319'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 1752224877319-source-1752224944843-target
      source: '1752224877319'
      sourceHandle: source
      target: '1752224944843'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 17526598238120-source-1752660008867-target
      source: '17526598238120'
      sourceHandle: source
      target: '1752660008867'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 1752660008867-source-17526600580160-target
      selected: false
      source: '1752660008867'
      sourceHandle: source
      target: '17526600580160'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: tool
        targetType: code
      id: 1752721111001-source-1752721223967-target
      source: '1752721111001'
      sourceHandle: source
      target: '1752721223967'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 1752721223967-source-1752721263559-target
      source: '1752721223967'
      sourceHandle: source
      target: '1752721263559'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: llm
      id: 1752721263559-source-1752721341154-target
      source: '1752721263559'
      sourceHandle: source
      target: '1752721341154'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1752721341154-source-1752721678942-target
      source: '1752721341154'
      sourceHandle: source
      target: '1752721678942'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 1752721678942-source-1752721798995-target
      source: '1752721678942'
      sourceHandle: source
      target: '1752721798995'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: llm
      id: 1752721263559-source-1752721845682-target
      source: '1752721263559'
      sourceHandle: source
      target: '1752721845682'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1752721845682-source-17527220362870-target
      source: '1752721845682'
      sourceHandle: source
      target: '17527220362870'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 17527220362870-source-17527220863270-target
      source: '17527220362870'
      sourceHandle: source
      target: '17527220863270'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: llm
      id: 1752721263559-source-1752722176044-target
      source: '1752721263559'
      sourceHandle: source
      target: '1752722176044'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1752722176044-source-17527222890510-target
      source: '1752722176044'
      sourceHandle: source
      target: '17527222890510'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 17527222890510-source-17527223731930-target
      source: '17527222890510'
      sourceHandle: source
      target: '17527223731930'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: llm
      id: 1752721263559-source-1752722449894-target
      source: '1752721263559'
      sourceHandle: source
      target: '1752722449894'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1752722449894-source-17527225663810-target
      source: '1752722449894'
      sourceHandle: source
      target: '17527225663810'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 17527225663810-source-17527226958680-target
      selected: false
      source: '17527225663810'
      sourceHandle: source
      target: '17527226958680'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: code
      id: 1752124102117-source-17527230980240-target
      source: '1752124102117'
      sourceHandle: source
      target: '17527230980240'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 17527230980240-source-1752047006319-target
      source: '17527230980240'
      sourceHandle: source
      target: '1752047006319'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: answer
      id: 1753179248999-source-answer-target
      source: '1753179248999'
      sourceHandle: source
      target: answer
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: if-else
      id: 1753233554524-source-1753233579863-target
      source: '1753233554524'
      sourceHandle: source
      target: '1753233579863'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1753233579863-true-1753233596269-target
      source: '1753233579863'
      sourceHandle: 'true'
      target: '1753233596269'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: answer
      id: 1753233596269-source-1752722795404-target
      source: '1753233596269'
      sourceHandle: source
      target: '1752722795404'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: answer
      id: 1753233579863-false-1753233612979-target
      source: '1753233579863'
      sourceHandle: 'false'
      target: '1753233612979'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: code
      id: 1752721798995-source-1753233554524-target
      source: '1752721798995'
      sourceHandle: source
      target: '1753233554524'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: code
      id: 17527220863270-source-1753233554524-target
      source: '17527220863270'
      sourceHandle: source
      target: '1753233554524'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: code
      id: 17527223731930-source-1753233554524-target
      source: '17527223731930'
      sourceHandle: source
      target: '1753233554524'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: code
      id: 17527226958680-source-1753233554524-target
      source: '17527226958680'
      sourceHandle: source
      target: '1753233554524'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: if-else
      id: 1752047006319-source-1753262503431-target
      source: '1752047006319'
      sourceHandle: source
      target: '1753262503431'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: knowledge-retrieval
      id: 1753262503431-true-1752112272794-target
      source: '1753262503431'
      sourceHandle: 'true'
      target: '1752112272794'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: if-else
      id: 1752047006319-source-1753262694258-target
      source: '1752047006319'
      sourceHandle: source
      target: '1753262694258'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: if-else
      id: 1752047006319-source-1753262710966-target
      source: '1752047006319'
      sourceHandle: source
      target: '1753262710966'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: if-else
      id: 1752047006319-source-1753262798318-target
      source: '1752047006319'
      sourceHandle: source
      target: '1753262798318'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: if-else
      id: 1752047006319-source-1753262807820-target
      source: '1752047006319'
      sourceHandle: source
      target: '1753262807820'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: if-else
      id: 1752047006319-source-1753262822140-target
      source: '1752047006319'
      sourceHandle: source
      target: '1753262822140'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1753262822140-true-1752224587022-target
      source: '1753262822140'
      sourceHandle: 'true'
      target: '1752224587022'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1753264481848-source-1752040655415-target
      source: '1753264481848'
      sourceHandle: source
      target: '1752040655415'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1752040149996-source-1753264544030-target
      source: '1752040149996'
      sourceHandle: source
      target: '1753264544030'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 1753264544030-source-17532649403910-target
      source: '1753264544030'
      sourceHandle: source
      target: '17532649403910'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: llm
      id: 17532649403910-source-1753264481848-target
      source: '17532649403910'
      sourceHandle: source
      target: '1753264481848'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1753322673428-false-17533227299000-target
      source: '1753322673428'
      sourceHandle: 'false'
      target: '17533227299000'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 17533227299000-source-17533228654580-target
      source: '17533227299000'
      sourceHandle: source
      target: '17533228654580'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: if-else
      id: 1753262807820-true-1753322673428-target
      source: '1753262807820'
      sourceHandle: 'true'
      target: '1753322673428'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1753326636059-source-1753336361353-target
      source: '1753326636059'
      sourceHandle: source
      target: '1753336361353'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 1753336361353-source-1753325311155-target
      source: '1753336361353'
      sourceHandle: source
      target: '1753325311155'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 1753325311155-source-1753341443954-target
      source: '1753325311155'
      sourceHandle: source
      target: '1753341443954'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1753352143174-true-1752040149996-target
      source: '1753352143174'
      sourceHandle: 'true'
      target: '1752040149996'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: llm
      id: 1753341443954-source-1753352324747-target
      source: '1753341443954'
      sourceHandle: source
      target: '1753352324747'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1753352324747-source-1753352930441-target
      source: '1753352324747'
      sourceHandle: source
      target: '1753352930441'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: if-else
      id: 1753352930441-source-1753352143174-target
      source: '1753352930441'
      sourceHandle: source
      target: '1753352143174'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1753352143174-false-1753353045735-target
      source: '1753352143174'
      sourceHandle: 'false'
      target: '1753353045735'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1753353045735-source-1753353082019-target
      source: '1753353045735'
      sourceHandle: source
      target: '1753353082019'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 1752112272794-source-1753418430234-target
      source: '1752112272794'
      sourceHandle: source
      target: '1753418430234'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: llm
      id: 1753418430234-source-1752040049164-target
      source: '1753418430234'
      sourceHandle: source
      target: '1752040049164'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: if-else
      id: 1753262798318-true-17534221478590-target
      source: '1753262798318'
      sourceHandle: 'true'
      target: '17534221478590'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 17534221478590-false-17526598238120-target
      source: '17534221478590'
      sourceHandle: 'false'
      target: '17526598238120'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 17536685290160-source-17536685554270-target
      source: '17536685290160'
      sourceHandle: source
      target: '17536685554270'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 17536685554270-source-17536685813050-target
      source: '17536685554270'
      sourceHandle: source
      target: '17536685813050'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 17536687740580-source-17536687880260-target
      source: '17536687740580'
      sourceHandle: source
      target: '17536687880260'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: if-else
      id: 17536687880260-source-17536688027980-target
      source: '17536687880260'
      sourceHandle: source
      target: '17536688027980'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 17536688027980-true-17536688300250-target
      source: '17536688027980'
      sourceHandle: 'true'
      target: '17536688300250'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 17536688300250-source-17536688587820-target
      source: '17536688300250'
      sourceHandle: source
      target: '17536688587820'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 17536688587820-source-17536689204620-target
      source: '17536688587820'
      sourceHandle: source
      target: '17536689204620'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: llm
      id: 17536689204620-source-17536689396100-target
      source: '17536689204620'
      sourceHandle: source
      target: '17536689396100'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 17536689396100-source-17536689615380-target
      source: '17536689396100'
      sourceHandle: source
      target: '17536689615380'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 17536689615380-source-17536689878980-target
      source: '17536689615380'
      sourceHandle: source
      target: '17536689878980'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 17536688027980-false-17536690725620-target
      source: '17536688027980'
      sourceHandle: 'false'
      target: '17536690725620'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 17536690725620-source-17536692665040-target
      source: '17536690725620'
      sourceHandle: source
      target: '17536692665040'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 17536692665040-source-17536693002730-target
      source: '17536692665040'
      sourceHandle: source
      target: '17536693002730'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 17536685813050-source-1753686034753-target
      source: '17536685813050'
      sourceHandle: source
      target: '1753686034753'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: llm
      id: 1753686034753-source-17536687740580-target
      source: '1753686034753'
      sourceHandle: source
      target: '17536687740580'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 1752224944843-source-1753692462580-target
      source: '1752224944843'
      sourceHandle: source
      target: '1753692462580'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: if-else
      id: 1753262710966-true-1753692992195-target
      source: '1753262710966'
      sourceHandle: 'true'
      target: '1753692992195'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1753693376845-source-1753693432069-target
      source: '1753693376845'
      sourceHandle: source
      target: '1753693432069'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 1753693432069-source-1753693474331-target
      source: '1753693432069'
      sourceHandle: source
      target: '1753693474331'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 1753693474331-source-1753693575387-target
      source: '1753693474331'
      sourceHandle: source
      target: '1753693575387'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: llm
      id: 1753693575387-source-1753693628042-target
      source: '1753693575387'
      sourceHandle: source
      target: '1753693628042'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1753693628042-source-1753693670548-target
      source: '1753693628042'
      sourceHandle: source
      target: '1753693670548'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: if-else
      id: 1753693670548-source-1753693725332-target
      source: '1753693670548'
      sourceHandle: source
      target: '1753693725332'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1753693725332-true-1753693772425-target
      source: '1753693725332'
      sourceHandle: 'true'
      target: '1753693772425'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1753693772425-source-1753693930013-target
      source: '1753693772425'
      sourceHandle: source
      target: '1753693930013'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 1753693930013-source-17536939819710-target
      source: '1753693930013'
      sourceHandle: source
      target: '17536939819710'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: tool
        targetType: llm
      id: 17536939819710-source-1753694117311-target
      source: '17536939819710'
      sourceHandle: source
      target: '1753694117311'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1753694117311-source-1753694216081-target
      source: '1753694117311'
      sourceHandle: source
      target: '1753694216081'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 1753694216081-source-17536946610590-target
      source: '1753694216081'
      sourceHandle: source
      target: '17536946610590'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1753692992195-false-1752038498570-target
      source: '1753692992195'
      sourceHandle: 'false'
      target: '1752038498570'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1753693725332-false-1753694801620-target
      source: '1753693725332'
      sourceHandle: 'false'
      target: '1753694801620'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1753694801620-source-1753696446396-target
      source: '1753694801620'
      sourceHandle: source
      target: '1753696446396'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 1753696446396-source-17536965411860-target
      source: '1753696446396'
      sourceHandle: source
      target: '17536965411860'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: if-else
      id: 1753262694258-true-17537539682150-target
      source: '1753262694258'
      sourceHandle: 'true'
      target: '17537539682150'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 17537545155100-source-17537546064590-target
      source: '17537545155100'
      sourceHandle: source
      target: '17537546064590'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 17537546064590-source-17537547361400-target
      source: '17537546064590'
      sourceHandle: source
      target: '17537547361400'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 17537547361400-source-17537547956660-target
      source: '17537547361400'
      sourceHandle: source
      target: '17537547956660'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: llm
      id: 17537547956660-source-17537548612070-target
      source: '17537547956660'
      sourceHandle: source
      target: '17537548612070'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 17537548612070-source-17537549363190-target
      source: '17537548612070'
      sourceHandle: source
      target: '17537549363190'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: if-else
      id: 17537549363190-source-17537549960650-target
      source: '17537549363190'
      sourceHandle: source
      target: '17537549960650'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 17537549960650-true-17537550365190-target
      source: '17537549960650'
      sourceHandle: 'true'
      target: '17537550365190'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 17537550365190-source-17537550778900-target
      source: '17537550365190'
      sourceHandle: source
      target: '17537550778900'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 17537550778900-source-17537551170660-target
      source: '17537550778900'
      sourceHandle: source
      target: '17537551170660'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 17537539682150-false-1752038483796-target
      source: '17537539682150'
      sourceHandle: 'false'
      target: '1752038483796'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 17537549960650-false-17537553693750-target
      source: '17537549960650'
      sourceHandle: 'false'
      target: '17537553693750'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 17537553693750-source-17537554009950-target
      source: '17537553693750'
      sourceHandle: source
      target: '17537554009950'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 17537554009950-source-17537554222360-target
      source: '17537554009950'
      sourceHandle: source
      target: '17537554222360'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: if-else
      id: 1752038279481-source-1753838057582-target
      source: '1752038279481'
      sourceHandle: source
      target: '1753838057582'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: tool
      id: 1753838057582-6d81d4e3-93c1-4c5c-bb2d-bdb15bdf1c4f-1752124102117-target
      source: '1753838057582'
      sourceHandle: 6d81d4e3-93c1-4c5c-bb2d-bdb15bdf1c4f
      target: '1752124102117'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: tool
      id: 1753838057582-true-1752721111001-target
      source: '1753838057582'
      sourceHandle: 'true'
      target: '1752721111001'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: http-request
        targetType: template-transform
      id: 1752196164770-source-1753861875335-target
      source: '1752196164770'
      sourceHandle: source
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 17537551170660-source-1753861875335-target
      source: '17537551170660'
      sourceHandle: source
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 17537554222360-source-1753861875335-target
      source: '17537554222360'
      sourceHandle: source
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 1752040747851-source-1753861875335-target
      source: '1752040747851'
      sourceHandle: source
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 17536946610590-source-1753861875335-target
      source: '17536946610590'
      sourceHandle: source
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 17536965411860-source-1753861875335-target
      source: '17536965411860'
      sourceHandle: source
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 1752040913487-source-1753861875335-target
      source: '1752040913487'
      sourceHandle: source
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 17536689878980-source-1753861875335-target
      source: '17536689878980'
      sourceHandle: source
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 17536693002730-source-1753861875335-target
      source: '17536693002730'
      sourceHandle: source
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 17526600580160-source-1753861875335-target
      source: '17526600580160'
      sourceHandle: source
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: template-transform
      id: 1753692462580-source-1753861875335-target
      source: '1753692462580'
      sourceHandle: source
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: template-transform
      id: 1753262694258-false-1753861875335-target
      source: '1753262694258'
      sourceHandle: 'false'
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: template-transform
      id: 1753262710966-false-1753861875335-target
      source: '1753262710966'
      sourceHandle: 'false'
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: template-transform
      id: 1753262807820-false-1753861875335-target
      source: '1753262807820'
      sourceHandle: 'false'
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: template-transform
      id: 1753262798318-false-1753861875335-target
      selected: false
      source: '1753262798318'
      sourceHandle: 'false'
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: llm
      id: 1753873679200-source-llm-target
      source: '1753873679200'
      sourceHandle: source
      target: llm
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: start
        targetType: code
      id: 1751953875623-source-1753873726033-target
      source: '1751953875623'
      sourceHandle: source
      target: '1753873726033'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 1753873726033-source-1753873679200-target
      source: '1753873726033'
      sourceHandle: source
      target: '1753873679200'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: answer
      id: 1753179345899-true-1753179366131-target
      source: '1753179345899'
      sourceHandle: 'true'
      target: '1753179366131'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1753179345899-false-1753179248999-target
      source: '1753179345899'
      sourceHandle: 'false'
      target: '1753179248999'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: answer
      id: 1753838057582-false-1752728130069-target
      source: '1753838057582'
      sourceHandle: 'false'
      target: '1752728130069'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: answer
      id: 1753838057582-5421fe17-22c9-43a6-b8a6-e11dd61c5793-1752038396200-target
      source: '1753838057582'
      sourceHandle: 5421fe17-22c9-43a6-b8a6-e11dd61c5793
      target: '1752038396200'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: tool
      id: 1753838057582-7e1170c5-6682-4434-a1d4-546fd53301ec-1754378598019-target
      source: '1753838057582'
      sourceHandle: 7e1170c5-6682-4434-a1d4-546fd53301ec
      target: '1754378598019'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: tool
        targetType: code
      id: 1754378598019-source-1754378692658-target
      source: '1754378598019'
      sourceHandle: source
      target: '1754378692658'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 1754378692658-source-1754378740963-target
      source: '1754378692658'
      sourceHandle: source
      target: '1754378740963'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: if-else
      id: 1754378740963-source-1754379039833-target
      source: '1754378740963'
      sourceHandle: source
      target: '1754379039833'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1754379039833-true-1754379124433-target
      source: '1754379039833'
      sourceHandle: 'true'
      target: '1754379124433'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: if-else
      id: 1754379124433-source-1754379212065-target
      source: '1754379124433'
      sourceHandle: source
      target: '1754379212065'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1754379212065-true-1754379278448-target
      source: '1754379212065'
      sourceHandle: 'true'
      target: '1754379278448'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1754379278448-source-1754379335920-target
      source: '1754379278448'
      sourceHandle: source
      target: '1754379335920'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 1754379335920-source-1754379379424-target
      source: '1754379335920'
      sourceHandle: source
      target: '1754379379424'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 1754379379424-source-1754379441680-target
      source: '1754379379424'
      sourceHandle: source
      target: '1754379441680'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: llm
      id: 1754379441680-source-1754379511368-target
      source: '1754379441680'
      sourceHandle: source
      target: '1754379511368'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1754379511368-source-1754379572304-target
      source: '1754379511368'
      sourceHandle: source
      target: '1754379572304'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: if-else
      id: 1754379572304-source-1754379603431-target
      source: '1754379572304'
      sourceHandle: source
      target: '1754379603431'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1754379603431-true-1754379657992-target
      source: '1754379603431'
      sourceHandle: 'true'
      target: '1754379657992'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1754379657992-source-1754379719919-target
      source: '1754379657992'
      sourceHandle: source
      target: '1754379719919'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1754379603431-false-1754379899774-target
      source: '1754379603431'
      sourceHandle: 'false'
      target: '1754379899774'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1754379899774-source-1754379960949-target
      source: '1754379899774'
      sourceHandle: source
      target: '1754379960949'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 1754379960949-source-17543800353070-target
      source: '1754379960949'
      sourceHandle: source
      target: '17543800353070'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: tool
        targetType: llm
      id: 17543800353070-source-1754380148197-target
      source: '17543800353070'
      sourceHandle: source
      target: '1754380148197'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1754380148197-source-1754380250676-target
      source: '1754380148197'
      sourceHandle: source
      target: '1754380250676'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1754379212065-false-17543804361460-target
      source: '1754379212065'
      sourceHandle: 'false'
      target: '17543804361460'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1754379039833-false-17543804361460-target
      source: '1754379039833'
      sourceHandle: 'false'
      target: '17543804361460'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 17543804361460-source-1754380544396-target
      source: '17543804361460'
      sourceHandle: source
      target: '1754380544396'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: if-else
      id: 1754380640892-source-1754380683107-target
      source: '1754380640892'
      sourceHandle: source
      target: '1754380683107'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1754380683107-true-1754380725963-target
      source: '1754380683107'
      sourceHandle: 'true'
      target: '1754380725963'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: answer
      id: 1754380725963-source-1754380787043-target
      source: '1754380725963'
      sourceHandle: source
      target: '1754380787043'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: answer
      id: 1754380683107-false-1754380829611-target
      source: '1754380683107'
      sourceHandle: 'false'
      target: '1754380829611'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1753692992195-true-1754387577506-target
      source: '1753692992195'
      sourceHandle: 'true'
      target: '1754387577506'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: if-else
      id: 1754387577506-source-1754387726217-target
      source: '1754387577506'
      sourceHandle: source
      target: '1754387726217'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1754387726217-true-1753693376845-target
      source: '1754387726217'
      sourceHandle: 'true'
      target: '1753693376845'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1754387726217-false-1752038498570-target
      source: '1754387726217'
      sourceHandle: 'false'
      target: '1752038498570'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1753322673428-true-1754387825065-target
      source: '1753322673428'
      sourceHandle: 'true'
      target: '1754387825065'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: if-else
      id: 1754387825065-source-1754387879569-target
      source: '1754387825065'
      sourceHandle: source
      target: '1754387879569'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1754387879569-true-1753326636059-target
      source: '1754387879569'
      sourceHandle: 'true'
      target: '1753326636059'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1754387879569-false-17533227299000-target
      source: '1754387879569'
      sourceHandle: 'false'
      target: '17533227299000'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 17537539682150-true-1754442733775-target
      source: '17537539682150'
      sourceHandle: 'true'
      target: '1754442733775'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: if-else
      id: 1754442733775-source-1754442874394-target
      source: '1754442733775'
      sourceHandle: source
      target: '1754442874394'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1754442874394-true-17537545155100-target
      source: '1754442874394'
      sourceHandle: 'true'
      target: '17537545155100'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1754442874394-false-1752038483796-target
      source: '1754442874394'
      sourceHandle: 'false'
      target: '1752038483796'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 17534221478590-true-1754444128338-target
      source: '17534221478590'
      sourceHandle: 'true'
      target: '1754444128338'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: if-else
      id: 1754444128338-source-1754444207354-target
      source: '1754444128338'
      sourceHandle: source
      target: '1754444207354'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1754444207354-true-17536685290160-target
      source: '1754444207354'
      sourceHandle: 'true'
      target: '17536685290160'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1754444207354-false-17526598238120-target
      source: '1754444207354'
      sourceHandle: 'false'
      target: '17526598238120'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: template-transform
        targetType: if-else
      id: 1753861875335-source-1753179345899-target
      source: '1753861875335'
      sourceHandle: source
      target: '1753179345899'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1754379719919-source-1754893849408-target
      source: '1754379719919'
      sourceHandle: source
      target: '1754893849408'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1754380250676-source-1754893916440-target
      source: '1754380250676'
      sourceHandle: source
      target: '1754893916440'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1754380544396-source-1754893967984-target
      source: '1754380544396'
      sourceHandle: source
      target: '1754893967984'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: variable-aggregator
        targetType: variable-aggregator
      id: 1754380333461-source-1754894019944-target
      source: '1754380333461'
      sourceHandle: source
      target: '1754894019944'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: variable-aggregator
        targetType: code
      id: 1754894019944-source-1754380640892-target
      source: '1754894019944'
      sourceHandle: source
      target: '1754380640892'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 1753353082019-source-17549968869940-target
      source: '1753353082019'
      sourceHandle: source
      target: '17549968869940'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 17549968869940-source-1753861875335-target
      source: '17549968869940'
      sourceHandle: source
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 1752040655415-source-17549969665540-target
      source: '1752040655415'
      sourceHandle: source
      target: '17549969665540'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 17549969665540-source-1753861875335-target
      source: '17549969665540'
      sourceHandle: source
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 1754893849408-source-17549970221300-target
      source: '1754893849408'
      sourceHandle: source
      target: '17549970221300'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 1754893916440-source-17549970763540-target
      source: '1754893916440'
      sourceHandle: source
      target: '17549970763540'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: variable-aggregator
      id: 17549970763540-source-1754380333461-target
      source: '17549970763540'
      sourceHandle: source
      target: '1754380333461'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: variable-aggregator
      id: 17549970221300-source-1754380333461-target
      source: '17549970221300'
      sourceHandle: source
      target: '1754380333461'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 1754893967984-source-17549971451780-target
      source: '1754893967984'
      sourceHandle: source
      target: '17549971451780'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: variable-aggregator
      id: 17549971451780-source-1754380333461-target
      source: '17549971451780'
      sourceHandle: source
      target: '1754380333461'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 17533228654580-source-17549972269860-target
      source: '17533228654580'
      sourceHandle: source
      target: '17549972269860'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 17549972269860-source-1753861875335-target
      source: '17549972269860'
      sourceHandle: source
      target: '1753861875335'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: 开始
        type: start
        variables: []
      height: 54
      id: '1751953875623'
      position:
        x: 30
        y: 7181
      positionAbsolute:
        x: 30
        y: 7181
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1753873679200'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: b2fad5b2-b944-4618-b8f5-c4d7421ac372
          role: system
          text: "## 角色\n你是一个精通电厂业务与技术的专业的意图识别分类器，能准确理解用户的问题，精准分类用户的需求。\n\n## 输入\n\
            - 用户的问题：{{#sys.query#}}\n- 意图描述及问题示例：{{#context#}}\n\n## 任务\n- 理解问题：仔细阅读并理解问题内容\n\
            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点\n- 输出用户意图分类：分析用户的问题语义，分析用户询问的目标，并结合意图描述及问题示例和分类标准，将用户问题归类到以下意图：生产信息、设备基础信息、设备检修记录、设备更换记录、设备缺陷记录、测点信息、处理规程、两票、闲聊、无法识别\n\
            \n## 分类标准\n### 分类1：生产信息\n**识别特征**\n- 询问生产事件或者现象出现的次数和处理措施\n- 关键词：“日志“、“日报“、“工作日常“、“记事“、“事件“、“现象“、“异常情况“\n\
            - 典型问法：XXXXX现象/事件出现几次，每一次的处理措施是什么？\n\n### 分类2：设备基础信息\n**识别特征**\n- 询问设备基础信息，如设备责任、设备编码、是否重要设备、专业等\n\
            - 询问机组或者系统下有哪些设备\n- 典型问法：\n   XXX号机组下有哪些设备？\n   XXX设备的基础信息是什么？\n\n###\
            \ 分类3：设备检修记录\n**识别特征**\n- 询问设备检修信息\n- 关键词：“检修”\n- 典型问法：XXXX号机组设备的XXX检修记录有哪些？\n\
            \n### 分类4：设备更换记录\n**识别特征**\n- 询问设备更换信息\n- 关键词：”更换“\n- 典型问法：XXXX号机组设备的XXX部件更换记录有哪些？\n\
            \n### 分类5：设备缺陷记录\n**识别特征**\n- 询问设备缺陷信息\n- 关键词：”更换“\n- 典型问法：XXXX号机组缺陷（编号）现在进展如何\n\
            \n### 分类6：测点信息\n**识别特征**\n- 询问测点的运行实时数据及正常值\n- 关键词：“运行数据“、“实时数据“、“测点“、“正常值“\n\
            - 典型问法：\n   XXXXX号机组设备的测试点实时数据和异常处理措施是什么？\n   如果xxx水流量过高应该怎么处理？\n\n###\
            \ 分类7：处理规程\n**识别特征**\n- 询问某个问题或事件或现象或缺陷的处理措施\n- 关键词：“规程”、“措施”、“处理”\n\n\
            ### 分类8：两票\n**识别特征**\n- 询问工作票或者操作票相关信息\n- 关键词：“工作票”、“工作票”\n- 典型问法：\n \
            \  xxxx操作票内容是什么，发令人是谁，当前状态如何？\n   XX工作票的内容详情？\n   xxx鼓风机检修的操作票记录有哪些？\n\
            \   操作票内容为xxx，请详细列出这个操作票的内容\n\n### 分类9：闲聊\n**识别特征**\n- 根据语义分析得出用户在闲聊\n\
            \n### 分类10：无法识别\n**识别特征**\n- 上述分类都不符合\n\n## 限制\n- 用户问题中同时包含不同意图对应的关键词时，必须根据语义确定用户问题的目标，以目标判定意图\n\
            - 只输出意图，不要输出其他内容\n- 多种识别规则都满足时，则同时判定多种意图，每个意图用逗号隔开。比如用户问”3号机组_过热器一级减温水流量是多少？如果3号机组_过热器一级减温水流量过高应该怎么处理？“那么意图判定为：测点信息，处理规程\n\
            - 只输出意图，不要输出其他内容\n- 禁止将“生产信息”、“两票”意图与其他意图一起输出，如禁止输出：生产信息,处理规程或两票,处理规程或生产信息,两票"
        selected: false
        title: 意图识别LLM
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: llm
      position:
        x: 1032.870550563296
        y: 7181
      positionAbsolute:
        x: 1032.870550563296
        y: 7181
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '{{#1753179248999.text#}}'
        desc: ''
        selected: false
        title: 设备回复
        type: answer
        variables: []
      height: 105
      id: answer
      position:
        x: 12145
        y: 3688
      positionAbsolute:
        x: 12145
        y: 3688
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    \n\n    result =\
          \ text.strip()\n    \n    \n    return {\"result\": result}\n"
        code_language: python3
        desc: 闲聊判断结果提取
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 意图结果提取
        type: code
        variables:
        - value_selector:
          - llm
          - text
          variable: arg1
      height: 82
      id: '1752038279481'
      position:
        x: 1367.1486983549971
        y: 7181
      positionAbsolute:
        x: 1367.1486983549971
        y: 7181
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: 我的职责是回答生产设备相关问题，其他方面无法回答！
        desc: ''
        selected: false
        title: 其他回复
        type: answer
        variables: []
      height: 118
      id: '1752038396200'
      position:
        x: 3127
        y: 7038
      positionAbsolute:
        x: 3127
        y: 7038
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 04c8f62d-ed1d-42f9-bbb7-47a134bd652c
          role: system
          text: '## 角色

            - 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            ## 输入

            - 用户的问题：{{#sys.query#}}

            - 表结构信息：{{#context#}}

            - 当前时间：{{#1752124102117.text#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出sql语句：根据用户问题中的关键信息和表结构信息生成sql语句。


            ## 约束

            - 务必遵守约束内容

            - 不可编造查询的字段

            - 限定查询em_equip_logic表

            - 只查询知识库中描述的关于em_equip_logic表的字段，不要涉及其他表的字段，禁止跨表混用字段，不要用select *写法

            - 除时间和日期类型字段外，必须使用like关键字模糊搜索

            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和em_equip_logic表的相应字段，合理拆分出关键信息，分析出合理的查询条件字段。优先分析考虑是否该用设备名称字段做查询条件。类似：kks_descr
            like ''%一次风机1A%''

            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。

            - sql务必使用标准的sql语法，语法必须符合postgresql数据库

            - 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,''YYYY-MM-DD'')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date

            - 只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号"\n"等

            - 除了仅关于次数统计的问题，不要在sql中使用cout()

            - 限制最多查询50条数据'
        selected: false
        title: 设备基础数据分析
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1752038483796'
      position:
        x: 9473
        y: 2255
      positionAbsolute:
        x: 9473
        y: 2255
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 5c9099c9-7e31-4431-8a04-5bdc04a5d31b
          role: system
          text: '## 角色

            - 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            ## 输入

            - 用户的问题：{{#sys.query#}}

            - 表结构信息：{{#context#}}

            - 当前时间：{{#1752124102117.text#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出sql语句：根据用户问题中的关键信息和表结构信息生成sql语句。


            ## 约束

            - 务必遵守约束内容

            - 不可编造查询的字段

            - 限定查询em_equip_recondition_remark_six表

            - 只查询知识库中描述的关于em_equip_recondition_remark_six表的字段，不要涉及其他表的字段，禁止跨表混用字段，不要用select
            *写法

            - 除时间和日期类型字段外，必须使用like关键字模糊搜索

            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和em_equip_recondition_remark_six表的相应字段，合理拆分出关键信息，分析出合理的查询条件字段。优先考虑使用设备名称字段做查询条件。类似：equip_name
            like ''%一次风机1A%''

            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。

            - sql务必使用标准的sql语法，语法必须符合postgresql数据库

            - 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,''YYYY-MM-DD'')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date

            - 只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号"\n"等

            - 除了仅关于次数统计的问题，不要在sql中使用cout()

            - 限制最多查询50条数据'
        selected: false
        title: 设备检修数据分析
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1752038498570'
      position:
        x: 9473
        y: 3389
      positionAbsolute:
        x: 9473
        y: 3389
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752112272794'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 6e0c17c7-81bd-4ecf-bb75-d0429a56548c
          role: system
          text: '## 角色

            - 你是一位数据结构专家，擅长处理各种数据结构。


            ## 输入

            - 用户的问题：{{#sys.query#}}

            - 测点信息：{{#context#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出回答：根据用户问题中的关键信息，分析问题是否与测点有关，分析测点信息，找出与测点信息中与用户问题相关的测点名称name对应的tag，如有多个用,隔开。


            ## 限制

            - 如用户问题与测点信息中的测点都不相关，则输出空字符。

            - 仅输出用逗号隔开的tag，不要添加额外的其他字符，不要添加换行回车符。

            '
        selected: false
        title: SIS实时接口请求分析LLM
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1752040049164'
      position:
        x: 9473
        y: 1334
      positionAbsolute:
        x: 9473
        y: 1334
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params:
            temperature: 0
            top_p: 0
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: acc13f47-728f-460f-936f-f3f961c13fc7
          role: system
          text: '## 角色

            - 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            ## 输入

            - 用户的问题：{{#sys.query#}}

            - 表结构信息：{{#context#}}

            - 机组编码：{{#1753341443954.result#}}

            - 问题中的机组名：{{#1753336361353.result#}}

            - 当前时间：{{#1752124102117.text#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出sql语句：根据用户问题中的关键信息和表结构信息生成sql语句。


            ## SQL编写步骤

            -首先，如果用户问题中包含“机组”，根据问题中的机组名从机组编码中匹配机组编码，用每个机组编码对id做前缀匹配。类似：select id from
            em_equip_logic where id like ''xx%'' or id like ''xxx%''，再根据用户问题中“机组”一词之后的语句拆分出关键信息，结合em_equip_logic表的相应字段，分析出合理的查询条件字段，用and
            连接。通常用户问题中的信息是关于设备名称的描述，优先分析考虑是否该用设备名称字段做查询条件。类似：kks_descr like ''%一次风机1A%''.

            - 如果用户问题中不包含“机组”，则直接根据用户问题拆分出关键信息，结合em_equip_logic表的相应字段，分析出合理的查询条件字段。通常用户问题中的信息是关于设备名称的描述，优先分析考虑是否该用设备名称字段做查询条件。类似：kks_descr
            like ''%一次风机1A%''

            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。


            ## 约束

            - 务必遵守约束内容

            - 不可编造查询的字段

            - 限定查询em_equip_logic表的id，如：select id from em_equip_logic

            - 只查询知识库中描述的关于em_equip_logic表的字段，不要涉及其他表的字段，禁止跨表混用字段，不要用select *写法

            - 除时间和日期类型字段外，必须使用like关键字模糊搜索

            - sql务必使用标准的sql语法，语法必须符合postgresql数据库

            - 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,''YYYY-MM-DD'')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date

            - 只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号"\n"等

            - 除了仅关于次数统计的问题，不要在sql中使用cout()

            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和em_equip_logic表结构信息，合理拆分出关键信息，分析出合理的查询条件字段。

            - 限制最多查询50条数据


            ## 示例

            - 用户问题：1机组鼓风机系统的缺陷记录有哪些？

            - 分析机组：“1机组”，where id like ''37781%''

            - 分析除机组外的系统或者具体设备信息：“鼓风机系统”，where kks_descr like ''%鼓风机系统%''

            - 最终SQL：select id from em_equip_logic where id like ''37781%'' and kks_descr
            like ''%鼓风机系统%''.'
        selected: false
        title: 设备编码分析
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1752040149996'
      position:
        x: 8471
        y: 5031
      positionAbsolute:
        x: 8471
        y: 5031
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 设备基础数据sql处理
        type: code
        variables:
        - value_selector:
          - '1752038483796'
          - text
          variable: arg1
      height: 54
      id: '1752040543720'
      position:
        x: 9807
        y: 2255
      positionAbsolute:
        x: 9807
        y: 2255
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 设备检修数据sql处理
        type: code
        variables:
        - value_selector:
          - '1752038498570'
          - text
          variable: arg1
      height: 54
      id: '1752040601965'
      position:
        x: 9807
        y: 3389
      positionAbsolute:
        x: 9807
        y: 3389
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 设备缺陷数据sql处理
        type: code
        variables:
        - value_selector:
          - '1753264481848'
          - text
          variable: arg1
      height: 54
      id: '1752040655415'
      position:
        x: 9807
        y: 5013
      positionAbsolute:
        x: 9807
        y: 5013
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 设备基础数据
        tool_configurations:
          db_name:
            type: constant
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          sql:
            type: mixed
            value: '{{#1752040543720.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '1752040747851'
      position:
        x: 10141
        y: 2210
      positionAbsolute:
        x: 10141
        y: 2210
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 设备检修数据
        tool_configurations:
          db_name:
            type: constant
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          sql:
            type: mixed
            value: '{{#1752040601965.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '1752040913487'
      position:
        x: 10141
        y: 3344
      positionAbsolute:
        x: 10141
        y: 3344
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - LDHYdxXzjMw2BYIJAceR/suzYM9C0QC9Gymxue5+koNYijA+6SVP38f/lkikNeZb
        desc: ''
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: weighted_score
          top_k: 4
          weights:
            keyword_setting:
              keyword_weight: 0
            vector_setting:
              embedding_model_name: bge-m3
              embedding_provider_name: langgenius/openai_api_compatible/openai_api_compatible
              vector_weight: 1
        query_variable_selector:
        - '17527230980240'
        - table
        retrieval_mode: multiple
        selected: false
        title: 表结构检索
        type: knowledge-retrieval
      height: 92
      id: '1752047006319'
      position:
        x: 3127
        y: 1333
      positionAbsolute:
        x: 3127
        y: 1333
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - jAhpOHvsPNmu+fBtyrdkn7MUvO9IV702fvALKLk7Ge2Hx/TDC8BsT/FfUKGKoJo/
        desc: ''
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: weighted_score
          top_k: 4
          weights:
            keyword_setting:
              keyword_weight: 0
            vector_setting:
              embedding_model_name: bge-m3
              embedding_provider_name: langgenius/openai_api_compatible/openai_api_compatible
              vector_weight: 1
        query_variable_selector:
        - '17527230980240'
        - detectPoints
        retrieval_mode: multiple
        selected: false
        title: 测点信息检索
        type: knowledge-retrieval
      height: 92
      id: '1752112272794'
      position:
        x: 8805
        y: 1334
      positionAbsolute:
        x: 8805
        y: 1334
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: '%Y-%m-%d %H:%M:%S'
          form: form
          human_description:
            en_US: Time format in strftime standard.
            ja_JP: Time format in strftime standard.
            pt_BR: Time format in strftime standard.
            zh_Hans: strftime 标准的时间格式。
          label:
            en_US: Format
            ja_JP: Format
            pt_BR: Format
            zh_Hans: 格式
          llm_description: null
          max: null
          min: null
          name: format
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: UTC
          form: form
          human_description:
            en_US: Timezone
            ja_JP: Timezone
            pt_BR: Timezone
            zh_Hans: 时区
          label:
            en_US: Timezone
            ja_JP: Timezone
            pt_BR: Timezone
            zh_Hans: 时区
          llm_description: null
          max: null
          min: null
          name: timezone
          options:
          - label:
              en_US: UTC
              ja_JP: UTC
              pt_BR: UTC
              zh_Hans: UTC
            value: UTC
          - label:
              en_US: America/New_York
              ja_JP: America/New_York
              pt_BR: America/New_York
              zh_Hans: 美洲/纽约
            value: America/New_York
          - label:
              en_US: America/Los_Angeles
              ja_JP: America/Los_Angeles
              pt_BR: America/Los_Angeles
              zh_Hans: 美洲/洛杉矶
            value: America/Los_Angeles
          - label:
              en_US: America/Chicago
              ja_JP: America/Chicago
              pt_BR: America/Chicago
              zh_Hans: 美洲/芝加哥
            value: America/Chicago
          - label:
              en_US: America/Sao_Paulo
              ja_JP: America/Sao_Paulo
              pt_BR: América/São Paulo
              zh_Hans: 美洲/圣保罗
            value: America/Sao_Paulo
          - label:
              en_US: Asia/Shanghai
              ja_JP: Asia/Shanghai
              pt_BR: Asia/Shanghai
              zh_Hans: 亚洲/上海
            value: Asia/Shanghai
          - label:
              en_US: Asia/Ho_Chi_Minh
              ja_JP: Asia/Ho_Chi_Minh
              pt_BR: Ásia/Ho Chi Minh
              zh_Hans: 亚洲/胡志明市
            value: Asia/Ho_Chi_Minh
          - label:
              en_US: Asia/Tokyo
              ja_JP: Asia/Tokyo
              pt_BR: Asia/Tokyo
              zh_Hans: 亚洲/东京
            value: Asia/Tokyo
          - label:
              en_US: Asia/Dubai
              ja_JP: Asia/Dubai
              pt_BR: Asia/Dubai
              zh_Hans: 亚洲/迪拜
            value: Asia/Dubai
          - label:
              en_US: Asia/Kolkata
              ja_JP: Asia/Kolkata
              pt_BR: Asia/Kolkata
              zh_Hans: 亚洲/加尔各答
            value: Asia/Kolkata
          - label:
              en_US: Asia/Seoul
              ja_JP: Asia/Seoul
              pt_BR: Asia/Seoul
              zh_Hans: 亚洲/首尔
            value: Asia/Seoul
          - label:
              en_US: Asia/Singapore
              ja_JP: Asia/Singapore
              pt_BR: Asia/Singapore
              zh_Hans: 亚洲/新加坡
            value: Asia/Singapore
          - label:
              en_US: Europe/London
              ja_JP: Europe/London
              pt_BR: Europe/London
              zh_Hans: 欧洲/伦敦
            value: Europe/London
          - label:
              en_US: Europe/Berlin
              ja_JP: Europe/Berlin
              pt_BR: Europe/Berlin
              zh_Hans: 欧洲/柏林
            value: Europe/Berlin
          - label:
              en_US: Europe/Moscow
              ja_JP: Europe/Moscow
              pt_BR: Europe/Moscow
              zh_Hans: 欧洲/莫斯科
            value: Europe/Moscow
          - label:
              en_US: Australia/Sydney
              ja_JP: Australia/Sydney
              pt_BR: Australia/Sydney
              zh_Hans: 澳大利亚/悉尼
            value: Australia/Sydney
          - label:
              en_US: Pacific/Auckland
              ja_JP: Pacific/Auckland
              pt_BR: Pacific/Auckland
              zh_Hans: 太平洋/奥克兰
            value: Pacific/Auckland
          - label:
              en_US: Africa/Cairo
              ja_JP: Africa/Cairo
              pt_BR: Africa/Cairo
              zh_Hans: 非洲/开罗
            value: Africa/Cairo
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          format: ''
          timezone: ''
        provider_id: time
        provider_name: time
        provider_type: builtin
        selected: false
        title: 获取当前时间
        tool_configurations:
          format:
            type: constant
            value: '%Y-%m-%d %H:%M:%S'
          timezone:
            type: constant
            value: Asia/Shanghai
        tool_description: 一个用于获取当前时间的工具。
        tool_label: 获取当前时间
        tool_name: current_time
        tool_node_version: '2'
        tool_parameters: {}
        type: tool
      height: 116
      id: '1752124102117'
      position:
        x: 2459
        y: 1303
      positionAbsolute:
        x: 2459
        y: 1303
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config: null
          type: no-auth
        body:
          data: []
          type: none
        default_value:
        - key: body
          type: string
          value: 实时数据获取异常
        - key: status_code
          type: number
          value: 0
        - key: headers
          type: object
          value: '{}'
        desc: ''
        error_strategy: default-value
        headers: ''
        method: get
        params: tagNames:{{#1752197476923.tagNames#}}
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: '1000'
        selected: false
        ssl_verify: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: 请求运行实时数据
        type: http-request
        url: http://10.136.16.226:8082/rtdb/tagName/getRTDataByBatch2
        variables: []
      height: 192
      id: '1752196164770'
      position:
        x: 10141
        y: 1334
      positionAbsolute:
        x: 10141
        y: 1334
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    tagNames = text.strip()\n\
          \    \n    \n    return {\"tagNames\": tagNames}\n"
        code_language: python3
        desc: ''
        outputs:
          tagNames:
            children: null
            type: string
        selected: false
        title: 接口参数处理
        type: code
        variables:
        - value_selector:
          - '1752040049164'
          - text
          variable: arg1
      height: 54
      id: '1752197476923'
      position:
        x: 9807
        y: 1334
      positionAbsolute:
        x: 9807
        y: 1334
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 749ba992-b3e4-4365-a8d1-881f206a4144
          role: system
          text: 根据用户的输入{{#sys.query#}}，分析用户可能需要的处理措施，生成关键词或句，用来检索处理规程知识库。只输出关键词句或句，其他内容不要。
        selected: false
        title: 处理措施意图分析
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1752224587022'
      position:
        x: 9139
        y: 6051
      positionAbsolute:
        x: 9139
        y: 6051
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    return {\"result\"\
          : text}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 提取检索关键词
        type: code
        variables:
        - value_selector:
          - '1752224587022'
          - text
          variable: arg1
      height: 54
      id: '1752224877319'
      position:
        x: 9473
        y: 6087
      positionAbsolute:
        x: 9473
        y: 6087
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - jAhpOHvsPNmu+fBtyrdkn7MUvO9IV702fvALKLk7Ge2Hx/TDC8BsT/FfUKGKoJo/
        desc: ''
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: weighted_score
          top_k: 4
          weights:
            keyword_setting:
              keyword_weight: 0
            vector_setting:
              embedding_model_name: bge-m3
              embedding_provider_name: langgenius/openai_api_compatible/openai_api_compatible
              vector_weight: 1
        query_variable_selector:
        - '1752224877319'
        - result
        retrieval_mode: multiple
        selected: false
        title: 处理措施检索
        type: knowledge-retrieval
      height: 92
      id: '1752224944843'
      position:
        x: 9807
        y: 6050
      positionAbsolute:
        x: 9807
        y: 6050
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 5c9099c9-7e31-4431-8a04-5bdc04a5d31b
          role: system
          text: '## 角色

            - 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            ## 输入

            - 用户的问题：{{#sys.query#}}

            - 表结构信息：{{#context#}}

            - 当前时间：{{#1752124102117.text#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出sql语句：根据用户问题中的关键信息和表结构信息生成sql语句。


            ## 约束

            - 务必遵守约束内容

            - 不可编造查询的字段

            - 限定查询em_equip_unit_change表

            - 只查询知识库中描述的关于em_equip_unit_change表的字段，不要涉及其他表的字段，禁止跨表混用字段，不要用select *写法

            - 除时间和日期类型字段外，必须使用like关键字模糊搜索

            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和表结构信息，合理拆分出关键信息，再结合em_equip_unit_change表的相应字段，分析出合理的查询条件字段。优先考虑使用设备名称字段做查询条件。类似：equip_name
            like ''%一次风机1A%''

            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。

            - sql务必使用标准的sql语法，语法必须符合postgresql数据库

            - 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,''YYYY-MM-DD'')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date

            -  只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号"\n"等

            - 除了仅关于次数统计的问题，不要在sql中使用cout()

            - 限制最多查询50条数据'
        selected: false
        title: 设备更换数据分析
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '17526598238120'
      position:
        x: 9473
        y: 4523
      positionAbsolute:
        x: 9473
        y: 4523
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 设备更换数据SQL处理
        type: code
        variables:
        - value_selector:
          - '17526598238120'
          - text
          variable: arg1
      height: 54
      id: '1752660008867'
      position:
        x: 9807
        y: 4523
      positionAbsolute:
        x: 9807
        y: 4523
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 设备更换数据（3）
        tool_configurations:
          db_name:
            type: constant
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          sql:
            type: mixed
            value: '{{#1752660008867.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17526600580160'
      position:
        x: 10141
        y: 4478
      positionAbsolute:
        x: 10141
        y: 4478
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: '%Y-%m-%d %H:%M:%S'
          form: form
          human_description:
            en_US: Time format in strftime standard.
            ja_JP: Time format in strftime standard.
            pt_BR: Time format in strftime standard.
            zh_Hans: strftime 标准的时间格式。
          label:
            en_US: Format
            ja_JP: Format
            pt_BR: Format
            zh_Hans: 格式
          llm_description: null
          max: null
          min: null
          name: format
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: UTC
          form: form
          human_description:
            en_US: Timezone
            ja_JP: Timezone
            pt_BR: Timezone
            zh_Hans: 时区
          label:
            en_US: Timezone
            ja_JP: Timezone
            pt_BR: Timezone
            zh_Hans: 时区
          llm_description: null
          max: null
          min: null
          name: timezone
          options:
          - label:
              en_US: UTC
              ja_JP: UTC
              pt_BR: UTC
              zh_Hans: UTC
            value: UTC
          - label:
              en_US: America/New_York
              ja_JP: America/New_York
              pt_BR: America/New_York
              zh_Hans: 美洲/纽约
            value: America/New_York
          - label:
              en_US: America/Los_Angeles
              ja_JP: America/Los_Angeles
              pt_BR: America/Los_Angeles
              zh_Hans: 美洲/洛杉矶
            value: America/Los_Angeles
          - label:
              en_US: America/Chicago
              ja_JP: America/Chicago
              pt_BR: America/Chicago
              zh_Hans: 美洲/芝加哥
            value: America/Chicago
          - label:
              en_US: America/Sao_Paulo
              ja_JP: America/Sao_Paulo
              pt_BR: América/São Paulo
              zh_Hans: 美洲/圣保罗
            value: America/Sao_Paulo
          - label:
              en_US: Asia/Shanghai
              ja_JP: Asia/Shanghai
              pt_BR: Asia/Shanghai
              zh_Hans: 亚洲/上海
            value: Asia/Shanghai
          - label:
              en_US: Asia/Ho_Chi_Minh
              ja_JP: Asia/Ho_Chi_Minh
              pt_BR: Ásia/Ho Chi Minh
              zh_Hans: 亚洲/胡志明市
            value: Asia/Ho_Chi_Minh
          - label:
              en_US: Asia/Tokyo
              ja_JP: Asia/Tokyo
              pt_BR: Asia/Tokyo
              zh_Hans: 亚洲/东京
            value: Asia/Tokyo
          - label:
              en_US: Asia/Dubai
              ja_JP: Asia/Dubai
              pt_BR: Asia/Dubai
              zh_Hans: 亚洲/迪拜
            value: Asia/Dubai
          - label:
              en_US: Asia/Kolkata
              ja_JP: Asia/Kolkata
              pt_BR: Asia/Kolkata
              zh_Hans: 亚洲/加尔各答
            value: Asia/Kolkata
          - label:
              en_US: Asia/Seoul
              ja_JP: Asia/Seoul
              pt_BR: Asia/Seoul
              zh_Hans: 亚洲/首尔
            value: Asia/Seoul
          - label:
              en_US: Asia/Singapore
              ja_JP: Asia/Singapore
              pt_BR: Asia/Singapore
              zh_Hans: 亚洲/新加坡
            value: Asia/Singapore
          - label:
              en_US: Europe/London
              ja_JP: Europe/London
              pt_BR: Europe/London
              zh_Hans: 欧洲/伦敦
            value: Europe/London
          - label:
              en_US: Europe/Berlin
              ja_JP: Europe/Berlin
              pt_BR: Europe/Berlin
              zh_Hans: 欧洲/柏林
            value: Europe/Berlin
          - label:
              en_US: Europe/Moscow
              ja_JP: Europe/Moscow
              pt_BR: Europe/Moscow
              zh_Hans: 欧洲/莫斯科
            value: Europe/Moscow
          - label:
              en_US: Australia/Sydney
              ja_JP: Australia/Sydney
              pt_BR: Australia/Sydney
              zh_Hans: 澳大利亚/悉尼
            value: Australia/Sydney
          - label:
              en_US: Pacific/Auckland
              ja_JP: Pacific/Auckland
              pt_BR: Pacific/Auckland
              zh_Hans: 太平洋/奥克兰
            value: Pacific/Auckland
          - label:
              en_US: Africa/Cairo
              ja_JP: Africa/Cairo
              pt_BR: Africa/Cairo
              zh_Hans: 非洲/开罗
            value: Africa/Cairo
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          format: ''
          timezone: ''
        provider_id: time
        provider_name: time
        provider_type: builtin
        selected: false
        title: 获取当前时间
        tool_configurations:
          format:
            type: constant
            value: '%Y-%m-%d %H:%M:%S'
          timezone:
            type: constant
            value: Asia/Shanghai
        tool_description: 一个用于获取当前时间的工具。
        tool_label: 获取当前时间
        tool_name: current_time
        tool_node_version: '2'
        tool_parameters: {}
        type: tool
      height: 116
      id: '1752721111001'
      position:
        x: 2125
        y: 323
      positionAbsolute:
        x: 2125
        y: 323
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main() -> dict:\n    return {\n        \"result\": \"tables\"\
          \n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 生产变量定义
        type: code
        variables: []
      height: 54
      id: '1752721223967'
      position:
        x: 2459
        y: 323
      positionAbsolute:
        x: 2459
        y: 323
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - kByN6OapeRk7OkbfvZbnmBPEZtbBdBr3HmRZEz8ZD+XCoQ2qPVoJDZTaiqO92pay
        desc: ''
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: weighted_score
          reranking_model:
            model: bge-reranker-base
            provider: langgenius/openai_api_compatible/openai_api_compatible
          top_k: 4
          weights:
            keyword_setting:
              keyword_weight: 0
            vector_setting:
              embedding_model_name: bge-m3
              embedding_provider_name: langgenius/openai_api_compatible/openai_api_compatible
              vector_weight: 1
        query_variable_selector:
        - '1752721223967'
        - result
        retrieval_mode: multiple
        selected: false
        title: 生产库表结构检索
        type: knowledge-retrieval
      height: 92
      id: '1752721263559'
      position:
        x: 2793
        y: 323
      positionAbsolute:
        x: 2793
        y: 323
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752721263559'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 60ef1a0c-bbef-4f15-98ab-1fedce3a78a8
          role: system
          text: '#角色

            你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            #任务

            你的任务是理解用户的输入和上下文内容，编写sql查询


            #关键步骤

            1.根据用户输入的内容和上下文信息，形成一个符合用户意图的完整问题。

            2.从{{#context#}}中获取em_equip_check_logs_record表的结构信息

            3.基于对{{#sys.query#}}，按照上述的数据表结构信息，编写sql查询语句，注意下划线和大小写务必严格按照上下文中检索的数据表结构信息。如果需要进行时间范围筛选，则基于当前时间{{#1752721111001.text#}}生成合理的查询条件。

            4.select后面要包含表结构中的所有字段

            5.去除sql语句中多余的注视，换行符等无用信息，输出一个纯净的，可直接执行的包含表名的sql语句

            6.除时间和日期类型字段外，必须使用like关键字模糊搜索

            7.根据{{#sys.query#}}拆分出关键设备名称和事件问题描述，然后对em_equip_check_logs_record的内容分别做模糊匹配，类似：worklog_content
            like ''%设备名称%'' and worklog_content like ''%事件问题描述%''

            8.日志时间和创建时间的格式是yyyy-mm-dd hh:mm:ss，如果用户问的是某一天或者某一月或者某一年需要用to_char()

            9.编写日期相关的sql时直接提供具体日期信息，不要用类似current_date的函数替代

            10.根据上几轮对话的{{#sys.query#}}和结果，并再次生成新的sql语句

            11.编写sql务必使用标准的sql语法，语法必须符合postgresql数据库。

            12.知识库中的表字段是英文的，编写sql时不要用中文的描述

            13.注意正确使用group by语法，不要用group_concat

            14.严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。


            #限制

            1.编写且仅编写查询em_equip_check_logs_record表的sql语句，必须限制，不可自主分析编写涉及除em-em_equip_check_logs_record表外的sql语句

            2.只输出sql语句，不要输出除sql语句以外的任何内容

            3.禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和em_equip_check_logs_record表的结构信息，合理拆分出关键信息，分析出合理的查询条件字段。

            - 限制最多查询50条数据'
        selected: false
        title: 生产技术日志LLM
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1752721341154'
      position:
        x: 3127
        y: 323
      positionAbsolute:
        x: 3127
        y: 323
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: true
        title: 生产技术日志SQL处理
        type: code
        variables:
        - value_selector:
          - '1752721341154'
          - text
          variable: arg1
      height: 54
      id: '1752721678942'
      position:
        x: 3461
        y: 323
      positionAbsolute:
        x: 3461
        y: 323
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: em-equip-check-logs-record
        tool_configurations:
          db_name:
            type: constant
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          sql:
            type: mixed
            value: '{{#1752721678942.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 246
      id: '1752721798995'
      position:
        x: 3795
        y: 323
      positionAbsolute:
        x: 3795
        y: 323
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752721263559'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: ac6197e3-855a-4498-be4e-5b5213b97b79
          role: system
          text: '#角色

            你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            #任务

            你的任务是理解用户的输入和上下文内容，编写sql查询


            #关键步骤

            1.根据用户输入的内容和上下文信息，形成一个符合用户意图的完整问题。

            2.从{{#context#}}中获取erp_om_log2表的结构信息

            3.基于对{{#sys.query#}}的理解，按照上述的数据表结构信息，编写sql查询语句，注意下划线和大小写务必严格按照上下文中检索的数据表结构信息。如果需要进行时间范围筛选，则基于当前时间{{#1752721111001.text#}}生成合理的查询条件

            4.select后面要包含表结构中的所有字段

            5.去除sql语句中多余的注视，换行符等无用信息，输出一个纯净的，可直接执行的包含表名的sql语句

            6.除时间和日期类型字段外，必须使用like关键字模糊搜索

            7.根据{{#sys.query#}}拆分出关键设备名称和事件问题描述，然后对erp_om_log2表的内容分别做模糊匹配，类似：rcinf
            like ''%设备名称%'' and  rcinf like ''%事件问题描述%''

            8.日志时间和创建时间的格式是yyyy-mm-dd hh:mm:ss，如果用户问的是某一天或者某一月或者某一年需要用to_char()

            9.编写日期相关的sql时直接提供具体日期信息，不要用类似current_date的函数替代

            10.根据上几轮对话的{{#sys.query#}}和结果，并再次生成新的sql语句

            11.编写sql务必使用标准的sql语法，语法必须符合postgresql数据库。

            12.知识库中的表字段是英文的，编写sql时不要用中文的描述

            13.注意正确使用group by语法，不要用group_concat

            14.严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。


            #限制

            1.编写且仅编写查询erp_om_log2表的sql语句，必须限制，不可自主分析编写涉及除erp_om_log2表外的sql语句

            2.只输出sql语句，不要输出除sql语句以外的任何内容

            3.禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和erp_om_log2表的结构信息，合理拆分出关键信息，分析出合理的查询条件字段。

            - 限制最多查询50条数据'
        selected: false
        title: 运行日志数据(ERP)LLM
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1752721845682'
      position:
        x: 3127
        y: 609
      positionAbsolute:
        x: 3127
        y: 609
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: '运行日志数据(ERP)SQL处理 '
        type: code
        variables:
        - value_selector:
          - '1752721845682'
          - text
          variable: arg1
      height: 54
      id: '17527220362870'
      position:
        x: 3461
        y: 609
      positionAbsolute:
        x: 3461
        y: 609
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: ERP-om-log2
        tool_configurations:
          db_name:
            type: constant
            value: omform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: omform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          sql:
            type: mixed
            value: '{{#17527220362870.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 246
      id: '17527220863270'
      position:
        x: 3795
        y: 609
      positionAbsolute:
        x: 3795
        y: 609
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752721263559'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 9d4a3f75-8c82-4fe0-91f5-057903559432
          role: system
          text: '#角色

            你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            #任务

            你的任务是理解用户的输入和上下文内容，编写sql查询


            #关键步骤

            1.根据用户输入的内容和上下文信息，形成一个符合用户意图的完整问题。

            2.从{{#context#}}中获取cb_om_log表的结构信息

            3.基于对{{#sys.query#}}的理解，按照上述的数据表结构信息，编写sql查询语句，注意下划线和大小写务必严格按照上下文中检索的数据表结构信息。如果需要进行时间范围筛选，则基于当前时间{{#1752721111001.text#}}生成合理的查询条件

            4.select后面要包含表结构中的所有字段

            5.去除sql语句中多余的注视，换行符等无用信息，输出一个纯净的，可直接执行的包含表名的sql语句

            6.除时间和日期类型字段外，必须使用like关键字模糊搜索

            7.根据{{#sys.query#}}拆分出关键设备名称和事件问题描述，然后对cb_om_log表的内容分别做模糊匹配，类似：descr like
            ''%设备名称%'' and  descr like ''%事件问题描述%''

            8.日志时间和创建时间的格式是yyyy-mm-dd hh:mm:ss，如果用户问的是某一天或者某一月或者某一年需要用to_char()

            9.编写日期相关的sql时直接提供具体日期信息，不要用类似current_date的函数替代

            10.根据上几轮对话的{{#sys.query#}}和结果，并再次生成新的sql语句

            11.编写sql务必使用标准的sql语法，语法必须符合postgresql数据库。

            12.知识库中的表字段是英文的，编写sql时不要用中文的

            描述

            13.注意正确使用group by语法，不要用group_concat

            14.严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。


            #限制

            1.编写且仅编写查询cb_om_log表的sql语句，必须限制，不可自主分析编写涉及除cb_om_log表外的sql语句

            2.只输出sql语句，不要输出除sql语句以外的任何内容

            3.禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和cb_om_log表的结构信息，合理拆分出关键信息，分析出合理的查询条件字段。

            - 限制最多查询50条数据'
        selected: false
        title: 运行日志数据(智慧平台)LLM
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1752722176044'
      position:
        x: 3127
        y: 895
      positionAbsolute:
        x: 3127
        y: 895
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 运行日志数据(智慧平台)SQL处理
        type: code
        variables:
        - value_selector:
          - '1752722176044'
          - text
          variable: arg1
      height: 54
      id: '17527222890510'
      position:
        x: 3461
        y: 895
      positionAbsolute:
        x: 3461
        y: 895
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: cb-om-log
        tool_configurations:
          db_name:
            type: constant
            value: omform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: omform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          sql:
            type: mixed
            value: '{{#17527222890510.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 246
      id: '17527223731930'
      position:
        x: 3795
        y: 895
      positionAbsolute:
        x: 3795
        y: 895
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752721263559'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: f7b19916-5b76-44a3-9833-451be68d7993
          role: system
          text: '#角色

            你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            #任务

            你的任务是理解用户的输入和上下文内容，编写sql查询


            #关键步骤

            1.根据用户输入的内容和上下文信息，形成一个符合用户意图的完整问题。

            2.从{{#context#}}中获取cb_om_day_report表的结构信息

            3.基于对{{#sys.query#}}的理解，按照上述的数据表结构信息，编写sql查询语句，注意下划线和大小写务必严格按照上下文中检索的数据表结构信息。如果需要进行时间范围筛选，则基于当前时间{{#1752721111001.text#}}生成合理的查询条件。

            4.select后面要包含表结构中的所有字段

            5.去除sql语句中多余的注视，换行符等无用信息，输出一个纯净的，可直接执行的包含表名的sql语句

            6.除时间和日期类型字段外，必须使用like关键字模糊搜索

            7.根据{{#sys.query#}}拆分出关键设备名称和事件问题描述，然后对cb_om_day_report表的product_problem和create_date做匹配，类似：product_problem
            like ''%设备名称%'' and product_problem like ''%事件问题描述%''，查询从知识库中检索到的所有字段

            8.日志时间和创建时间的格式是yyyy-mm-dd hh:mm:ss，如果用户问的是某一天或者某一月或者某一年需要用to_char()

            9.编写日期相关的sql时直接提供具体日期信息，不要用类似current_date的函数替代

            10.根据上几轮对话的{{#sys.query#}}和结果，并再次生成新的sql语句

            11.编写sql务必使用标准的sql语法，语法必须符合postgresql数据库。

            12.知识库中的表字段是英文的，编写sql时不要用中文的描述

            13.注意正确使用group by语法，不要用group_concat

            14.严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。


            #限制

            1.编写且仅编写查询cb_om_day_report表的sql语句，必须限制，不可自主分析编写涉及除cb_om_day_report表外的sql语句

            2.只输出sql语句，不要输出除sql语句以外的任何内容

            3.禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和cb_om_day_report表的结构信息，合理拆分出关键信息，分析出合理的查询条件字段。

            - 限制最多查询50条数据'
        selected: false
        title: 运行日报(智慧平台)LLM
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1752722449894'
      position:
        x: 3127
        y: 1181
      positionAbsolute:
        x: 3127
        y: 1181
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 运行日报(智慧平台)SQL处理
        type: code
        variables:
        - value_selector:
          - '1752722449894'
          - text
          variable: arg1
      height: 54
      id: '17527225663810'
      position:
        x: 3461
        y: 1181
      positionAbsolute:
        x: 3461
        y: 1181
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: Cb-om-day-report
        tool_configurations:
          db_name:
            type: constant
            value: omform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: omform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          sql:
            type: mixed
            value: '{{#17527225663810.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 246
      id: '17527226958680'
      position:
        x: 3795
        y: 1181
      positionAbsolute:
        x: 3795
        y: 1181
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '{{#1753233596269.text#}}'
        desc: ''
        selected: false
        title: 生产信息回复
        type: answer
        variables: []
      height: 105
      id: '1752722795404'
      position:
        x: 5465
        y: 477.5
      positionAbsolute:
        x: 5465
        y: 477.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main() -> dict:\n    return {\"table\":\"tables\",\"detectPoints\"\
          :\"detectPoints\"}\n"
        code_language: python3
        desc: 闲聊判断结果提取
        outputs:
          detectPoints:
            children: null
            type: string
          table:
            children: null
            type: string
        selected: false
        title: 设备变量定义
        type: code
        variables: []
      height: 82
      id: '17527230980240'
      position:
        x: 2793
        y: 1339
      positionAbsolute:
        x: 2793
        y: 1339
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: 抱歉没能完全理解您的需求，能再具体描述下您想解决的问题场景吗？
        desc: ''
        selected: false
        title: 无法识别回复
        type: answer
        variables: []
      height: 118
      id: '1752728130069'
      position:
        x: 3461
        y: 7229
      positionAbsolute:
        x: 3461
        y: 7229
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params:
            temperature: 0.1
            top_p: 0.1
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 30da598c-ded4-459f-9b53-437b4e0863c1
          role: system
          text: '## 角色

            - 你是专业的文本内容理解与提取专家


            ## 输入

            - 用户问题：{{#sys.query#}}

            - 查询到的数据：{{#1753861875335.output#}}

            - 表结构信息：{{#context#}}

            - 设备专业对照表：01：汽机专业  ，02：锅炉专业 ，03：燃气轮机 ，04：燃气余热锅炉 ，05：电气一次  ，06：电气二次 ，07：热控专业
             ，08：化学专业，09：燃料专业 ，10：除灰专业  ，11：脱硫专业，12：脱硝专业 ，13：海淡专业  ，14：信息专业  ，15：土建专业
             ，16：消防专业  ，17：水工专业  ，18：起重专业  ，19：电梯专业  ，20：暖通专业 ，21：其它专业 

            - 缺陷状态对照表

            1：缺陷登记 ，2：设备点检接收  ，3：接收人接收 ，4：点检验收  ，5：运行验收 ，6：终结  ，7：退回发现人

            - 检修性质对照表：1：大修 ，2：中修  ，3：小修  ，4：D级维修  ，5：临修  ，6：月度检修

            - 更换原因对照表：1：设备损坏，2：磨损，3：电子产品服务到期，4：设备改造，5：其他

            - 是否重要设备对照表：0：否，1：是


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出回答：根据用户问题中的关键信息，分析日志中每一小段内容的，找出与问题相关的内容，并根据用户问题提炼总结出准确的回答，语言要高效精准严谨。


            ## 约束

            - 严禁编造信息

            - 理解用户问题，分析输入数据的类别：设备运行实时数据、设备基础数据、设备检修数据、设备更换数据、设备缺陷数据、处理措施，与用户问题不相关的类别数据禁止出现在回答中。比如用户问最近一周的缺陷记录，回答内容中仅回答缺陷记录，严禁回答其他类别的内容和其他类别的说明。

            - 回答正文中有关测点的描述一律不要显示tag编码，一律按照测点信息中的name的中文名回答。

            - 涉及到处理措施或建议的，务必按照知识库内容一字不差回答，并标注来源的规程文档，不可自己发散生成措施或建议。

            - 回答正文中不要出现任何思考过程相关内容，也不要出现"思考过程"部分

            - 如果设备运行实时数据无异常，那么有关异常的原因分析和建议部分的内容要在标题表明是假设出现异常的原因分析或措施。

            - 设备基础数据中的专业字段如果是数字则需要按照设备专业对照表转换成中文，是否重要设备字段如果是数字则需要按照是否重要设备对照表转换成中文

            - 设备检修数据中的检修原因如果是数字则需按照检修性质对照表转换成中文

            - 设备缺陷数据中的缺陷状态如果是数字则需按照缺陷状态对照表转换成中文

            - 设备更换数据中的更换原因如果是数字则需按照更换原因对照表转换成中文

            - 禁止对查询结果进行统计


            ## 格式

            - 进行结构化分层，使用多级标题组织内容

            - 将结果中的数据转换为表格展示，并且添加序号列，没有查到数据时，回答未查询到数据，不用输出表格

            - 在结尾加上备注：为保证数据加载速度和可读性，系统默认展示前50条匹配结果'
        selected: false
        title: 设备信息总结LLM
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1753179248999'
      position:
        x: 11811
        y: 3688
      positionAbsolute:
        x: 11811
        y: 3688
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: 892d3d17-4641-4c4a-a06f-c09e63c6e4d0
            value: 答案信息过多
            varType: string
            variable_selector:
            - '1753861875335'
            - output
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 长度判断
        type: if-else
      height: 126
      id: '1753179345899'
      position:
        x: 10809
        y: 3668
      positionAbsolute:
        x: 10809
        y: 3668
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: 根据您的问题，答案信息过多，不便阅读，请详细描述问题内容，重新提问！
        desc: ''
        selected: false
        title: 超长回复
        type: answer
        variables: []
      height: 118
      id: '1753179366131'
      position:
        x: 11477
        y: 3539
      positionAbsolute:
        x: 11477
        y: 3539
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str,arg2: str,arg3: str,arg4: str) -> dict:\n    return\
          \ {\n        \"result\": len(arg1)+len(arg2)+len(arg3)+len(arg4)\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: number
        selected: false
        title: 计算长度
        type: code
        variables:
        - value_selector:
          - '1752721798995'
          - text
          variable: arg1
        - value_selector:
          - '17527220863270'
          - text
          variable: arg2
        - value_selector:
          - '17527223731930'
          - text
          variable: arg3
        - value_selector:
          - '17527226958680'
          - text
          variable: arg4
      height: 54
      id: '1753233554524'
      position:
        x: 4129
        y: 609
      positionAbsolute:
        x: 4129
        y: 609
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: ≤
            id: 41d45baf-b0cd-46be-a3b1-e1fafee4acef
            value: '25000'
            varType: number
            variable_selector:
            - '1753233554524'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 长度判断
        type: if-else
      height: 126
      id: '1753233579863'
      position:
        x: 4463
        y: 609
      positionAbsolute:
        x: 4463
        y: 609
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: ad488cf2-48ed-46d0-ab28-9856a90d06da
          role: system
          text: '## 角色

            - 你是专业的文本内容理解与处理专家


            ## 输入

            - 用户问题：{{#sys.query#}}

            - 生产技术日志：{{#1752721798995.text#}}

            - 运行日报：{{#17527226958680.text#}}

            - 运行日志数据(智慧平台)：{{#17527223731930.text#}}

            - 运行日志数据(ERP)：{{#17527220863270.text#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取事件或现象，并确定用户的意图

            - 输出回答：根据用户问题中的提到的事件或者现象，依次分析生产技术日志、运行日报、运行日志数据(智慧平台)、运行日志数据(ERP)的日志内容，过滤出与用户问题中的提到的事件或者现象匹配的记录，并根据用户问题提炼总结出准确的回答，语言要高效精准严谨。


            ## 约束

            - 严禁编造信息

            - 不要漏任何一条记录，逐条分析，不要重复处理同一条记录

            - 按用户问题中的现象或事件来匹配过滤内容，不要做过多发散思考

            - 禁止对查询结果进行统计


            ## 格式

            - 进行结构化分层，使用多级标题组织内容

            - 将结果中的数据转换为表格展示，并且添加序号列

            - 在结尾加上备注：为保证数据加载速度和可读性，系统默认展示前50条匹配结果


            ## 示例

            根据相关日志记录，原烟气CEMS小室门锁芯坏事件发生5次，每次的处理事件和措施如下：

            1.2024-12-14 05:09:54 （#4机组原烟气CEMS小室门锁芯坏）：【#5机组锅炉钢结构区域钢结构油漆】，主要风险：高空坠落、高空落物，当前状态开工'
        selected: false
        title: 生产信息总结LLM
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1753233596269'
      position:
        x: 5131
        y: 477.5
      positionAbsolute:
        x: 5131
        y: 477.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: 根据您的问题，答案信息过多，不便阅读，请详细描述问题内容，重新提问！
        desc: ''
        selected: false
        title: 超长回复
        type: answer
        variables: []
      height: 118
      id: '1753233612979'
      position:
        x: 5465
        y: 648.5
      positionAbsolute:
        x: 5465
        y: 648.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: 98bf3bf4-edb0-4ebd-b01b-44d5cbbe955f
            value: 测点信息
            varType: string
            variable_selector:
            - '1752038279481'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 测点信息分支
        type: if-else
      height: 126
      id: '1753262503431'
      position:
        x: 8471
        y: 1334
      positionAbsolute:
        x: 8471
        y: 1334
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: f681a3a8-b30a-41fd-b4bc-4d43a3357457
            value: 设备基础信息
            varType: string
            variable_selector:
            - '1752038279481'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 设备基础数据分支
        type: if-else
      height: 126
      id: '1753262694258'
      position:
        x: 4129
        y: 2478
      positionAbsolute:
        x: 4129
        y: 2478
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: bb799855-baf5-44b9-bd18-c8f3ad583a77
            value: 设备检修记录
            varType: string
            variable_selector:
            - '1752038279481'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 设备检修记录分支
        type: if-else
      height: 126
      id: '1753262710966'
      position:
        x: 3461
        y: 3612
      positionAbsolute:
        x: 3461
        y: 3612
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: dc6bea1f-3538-40a5-a672-351e4637f4e0
            value: 设备更换记录
            varType: string
            variable_selector:
            - '1752038279481'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 设备更换记录分支
        type: if-else
      height: 126
      id: '1753262798318'
      position:
        x: 3461
        y: 4746
      positionAbsolute:
        x: 3461
        y: 4746
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: 6fa5b11a-fb75-4e3b-9cb1-daa70d61b229
            value: 设备缺陷记录
            varType: string
            variable_selector:
            - '1752038279481'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 设备缺陷记录分支
        type: if-else
      height: 126
      id: '1753262807820'
      position:
        x: 3461
        y: 5880
      positionAbsolute:
        x: 3461
        y: 5880
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: 175c82e6-08c7-4706-a4dd-0b5e8ac2c2b6
            value: 处理规程
            varType: string
            variable_selector:
            - '1752038279481'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 处理规程分支
        type: if-else
      height: 126
      id: '1753262822140'
      position:
        x: 8805
        y: 6052
      positionAbsolute:
        x: 8805
        y: 6052
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 3162f7a6-7a65-4f84-8037-479000c1ba0d
          role: system
          text: '## 角色

            - 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            ## 输入

            - 用户问题：{{#sys.query#}}

            - 设备编码：{{#17532649403910.text#}}

            - 当前时间：{{#1752124102117.text#}}

            - 表结构信息：{{#context#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出sql语句：根据用户问题中的关键信息和表结构信息生成sql语句。


            ## 约束

            - 务必遵守约束内容

            - 不可编造查询的字段

            - 限定查询wo_defect_erp表

            - 只查询知识库中描述的关于wo_defect_erp表的字段，不要涉及其他表的字段，禁止跨表混用字段，禁止用select *写法

            - 除时间和日期类型字段外，必须使用like关键字模糊搜索

            - 从输入的设备编码中提取id，对每个id做前缀模糊匹配，or连接，类似：where tplnr like ''xxx%'' or tplnr
            like ''xx%''

            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和wo_defect_erp表的相应字段，合理拆分出关键信息，分析出合理的查询条件字段。优先考虑使用缺陷描述字段做查询条件。类似：qmtxt
            like ''%一次风机1A%''

            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。

            - sql务必使用标准的sql语法，语法必须符合postgresql数据库

            - 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,''YYYY-MM-DD'')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date

            - 缺陷发生日期字段zjlrq，记录的是日期如2025-07-21,字符类型；缺陷发生时间字段zjlsj，记录的是时间如17:32，字符类型

            - 只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号"\n"等

            - 除了仅关于次数统计的问题，不要在sql中使用cout()

            - 限制最多查询50条数据'
        selected: false
        title: 设备缺陷数据分析
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1753264481848'
      position:
        x: 9473
        y: 5013
      positionAbsolute:
        x: 9473
        y: 5013
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip().replace(\"\\n\",\"\")\n    \n    \n    return {\"\
          result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 设备编码SQL处理
        type: code
        variables:
        - value_selector:
          - '1752040149996'
          - text
          variable: arg1
      height: 54
      id: '1753264544030'
      position:
        x: 8805
        y: 5032
      positionAbsolute:
        x: 8805
        y: 5032
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 设备编码
        tool_configurations:
          db_name:
            type: constant
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          sql:
            type: mixed
            value: '{{#1753264544030.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17532649403910'
      position:
        x: 9139
        y: 4899
      positionAbsolute:
        x: 9139
        y: 4899
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: 509faf52-d500-45eb-ae97-5cf9e7894951
            value: 机组
            varType: string
            variable_selector:
            - sys
            - query
          - comparison_operator: contains
            id: 488fa8f2-7f64-416c-ae13-8845533196aa
            value: 公用
            varType: string
            variable_selector:
            - sys
            - query
          - comparison_operator: contains
            id: e7d37d50-ff7f-45ef-9bba-1f4e1497fe8f
            value: 系统
            varType: string
            variable_selector:
            - sys
            - query
          id: 'true'
          logical_operator: or
        desc: ''
        selected: false
        title: 机组判断2
        type: if-else
      height: 178
      id: '1753322673428'
      position:
        x: 4129
        y: 5695
      positionAbsolute:
        x: 4129
        y: 5695
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: acc13f47-728f-460f-936f-f3f961c13fc7
          role: system
          text: '## 角色

            - 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            ## 输入

            - 用户的问题：{{#sys.query#}}

            - 表结构信息：{{#context#}}

            - 当前时间：{{#1752124102117.text#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出sql语句：根据用户问题中的关键信息和表结构信息生成sql语句。


            ## 约束

            - 务必遵守约束内容

            - 不可编造查询的字段

            - 限定查询wo_defect_erp表

            - 只查询知识库中描述的关于wo_defect_erp表的字段，不要涉及其他表的字段，禁止跨表混用字段，不要用select *写法

            - 除时间和日期类型字段外，必须使用like关键字模糊搜索

            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和wo_defect_erp表的相应字段，合理拆分出关键信息，分析出合理的查询条件字段。优先考虑使用缺陷描述字段做查询条件。类似：qmtxt
            like ''%一次风机1A%''

            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。

            - sql务必使用标准的sql语法，语法必须符合postgresql数据库

            - 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,''YYYY-MM-DD'')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date

            - 缺陷发生日期字段zjlrq，记录的是日期如2025-07-21,字符类型；缺陷发生时间字段zjlsj，记录的是时间如17:32，字符类型

            - 只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号"\n"等

            - 除了仅关于次数统计的问题，不要在sql中使用cout()

            - 限制最多查询50条数据'
        selected: false
        title: 设备缺陷数据分析2
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '17533227299000'
      position:
        x: 9473
        y: 5657
      positionAbsolute:
        x: 9473
        y: 5657
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 设备缺陷数据sql处理2
        type: code
        variables:
        - value_selector:
          - '17533227299000'
          - text
          variable: arg1
      height: 54
      id: '17533228654580'
      position:
        x: 9807
        y: 5657
      positionAbsolute:
        x: 9807
        y: 5657
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - qUedNXVQeKgVjYuPFmzRGQuZDwaq03Ny1P8L53NeclPax6xCJsUGtDCcKs1Gdget
        desc: ''
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: weighted_score
          reranking_model:
            model: bge-reranker-base
            provider: langgenius/openai_api_compatible/openai_api_compatible
          top_k: 4
          weights:
            keyword_setting:
              keyword_weight: 0
            vector_setting:
              embedding_model_name: bge-m3
              embedding_provider_name: langgenius/openai_api_compatible/openai_api_compatible
              vector_weight: 1
        query_variable_selector:
        - '1753336361353'
        - jizu
        retrieval_mode: multiple
        selected: false
        title: 机组编码检索2
        type: knowledge-retrieval
      height: 92
      id: '1753325311155'
      position:
        x: 6467
        y: 5314
      positionAbsolute:
        x: 6467
        y: 5314
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 3c502bc1-bde6-476a-b20b-03a26026c399
          role: system
          text: '## 角色

            - 你是专业的文本内容理解与提取专家


            ## 输入

            - 用户问题：{{#sys.query#}}


            ## 机组名称识别规则

            - 机组同义描述：1机组、一机组、#1、1号机组、一号机组

            - 机组编号识别中不区分中文还是阿拉伯数字

            - 包含“公用”的为公用机组。

            - 包含“系统”的为系统机组


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出内容：从用户问题中识别机组名称，并按格式输出。


            ## 输出格式

            - x号机组，示例：1号机组，多个用逗号隔开

            - 多个机组公用的，以#开头，示例：#1、2机组公用

            - 其他根据语义匹配：三期公用、全厂公用、光伏系统、厂区风机系统


            ## 约束

            - 仅输出机组名称，禁止输出其他内容，机组名称中不要包含换行符”\n"。'
        selected: false
        title: 提取机组分析
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1753326636059'
      position:
        x: 5799
        y: 5333
      positionAbsolute:
        x: 5799
        y: 5333
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n        text = text.replace(\"\
          \\n\",\"\")\n\n    return {\"result\": text,\"jizu\":\"jizu\"}\n"
        code_language: python3
        desc: ''
        outputs:
          jizu:
            children: null
            type: string
          result:
            children: null
            type: string
        selected: false
        title: 机组提取/检索变量
        type: code
        variables:
        - value_selector:
          - '1753326636059'
          - text
          variable: arg1
      height: 54
      id: '1753336361353'
      position:
        x: 6133
        y: 5315
      positionAbsolute:
        x: 6133
        y: 5315
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    return {\n        \"result\": arg1\n\
          \    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: array[object]
        selected: false
        title: 暂存机组编码
        type: code
        variables:
        - value_selector:
          - '1753325311155'
          - result
          variable: arg1
      height: 54
      id: '1753341443954'
      position:
        x: 6801
        y: 5315
      positionAbsolute:
        x: 6801
        y: 5315
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: e2678149-59e6-401f-8c78-4b3f549d2e98
            value: 否
            varType: string
            variable_selector:
            - '1753352930441'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 机组判断
        type: if-else
      height: 126
      id: '1753352143174'
      position:
        x: 7803
        y: 5297
      positionAbsolute:
        x: 7803
        y: 5297
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 36ae95da-47d6-483f-b715-281fc1a5e261
          role: system
          text: '## 角色

            - 你是专业的文本内容理解与提取专家


            ## 输入

            - 用户问题：{{#sys.query#}}


            ## 机组名称识别规则

            - 机组同义描述：1机组、一机组、#1、1号机组、一号机组

            - 机组编号识别中不区分中文还是阿拉伯数字

            - 包含“公用”的为公用机组。

            - 包含“系统”的为系统机组


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出内容：从用户问题中识别机组名称，判断机组名称之后是否还有关于其他设备名称的描述，如果没有，问题中只有关于机组的描述则输出：是，如果问题中还有除机组外的设备名称描述则输出：否。


            ## 约束

            - 仅输出是或否，禁止输出其他内容，机组名称中不要包含换行符”\n"。'
        selected: false
        title: 机组识别
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1753352324747'
      position:
        x: 7135
        y: 5316
      positionAbsolute:
        x: 7135
        y: 5316
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    \n\n    result =\
          \ text.strip()\n    \n    \n    return {\"result\": result}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 机组识别提取
        type: code
        variables:
        - value_selector:
          - '1753352324747'
          - text
          variable: arg1
      height: 54
      id: '1753352930441'
      position:
        x: 7469
        y: 5315
      positionAbsolute:
        x: 7469
        y: 5315
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 60d68155-0fd2-4d63-9d50-d7cc2f504c0c
          role: system
          text: '## 角色

            - 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            ## 输入

            - 用户问题：{{#sys.query#}}

            - 机组编码：{{#1753341443954.result#}}

            - 机组名称：{{#1753336361353.result#}}

            - 当前时间：{{#1752124102117.text#}}

            - 表结构：{{#context#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出sql语句：根据用户问题中的关键信息和表结构信息生成sql语句。


            ## 约束

            - 务必遵守约束内容

            - 任何情况都不允许使用select * 方式编写SQL语句

            - 不可编造查询的字段

            - 限定查询wo_defect_erp表

            - 只查询知识库中描述的关于wo_defect_erp表的字段，不要涉及其他表的字段，禁止跨表混用字段

            - 除时间和日期类型字段外，必须使用like关键字模糊搜索

            - 根据机组名称从机组编码中匹配机组编码，用每个机组编码对tplnr 做前缀匹配，类似：where tplnr like ''xxx%''
            or tplnr like ''xx%''

            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和wo_defect_erp表的相应字段，合理拆分出关键信息，分析出合理的查询条件字段。优先考虑使用缺陷描述字段做查询条件。类似：qmtxt
            like ''%一次风机1A%''

            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。

            - sql务必使用标准的sql语法，语法必须符合postgresql数据库

            - 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,''YYYY-MM-DD'')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date

            - 缺陷发生日期字段zjlrq，记录的是日期如2025-07-21,字符类型；缺陷发生时间字段zjlsj，记录的是时间如17:32，字符类型

            - 只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号"\n"等

            - 除了仅关于次数统计的问题，不要在sql中使用cout()

            - 限制最多查询50条数据'
        selected: false
        title: 设备缺陷数据分析3
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1753353045735'
      position:
        x: 9473
        y: 5333
      positionAbsolute:
        x: 9473
        y: 5333
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 设备缺陷数据sql处理2
        type: code
        variables:
        - value_selector:
          - '1753353045735'
          - text
          variable: arg1
      height: 54
      id: '1753353082019'
      position:
        x: 9807
        y: 5335
      positionAbsolute:
        x: 9807
        y: 5335
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    return {\n        \"result\": arg1\n\
          \    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: array[object]
        selected: false
        title: 暂存测点信息
        type: code
        variables:
        - value_selector:
          - '1752112272794'
          - result
          variable: arg1
      height: 54
      id: '1753418430234'
      position:
        x: 9139
        y: 1334
      positionAbsolute:
        x: 9139
        y: 1334
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: 509faf52-d500-45eb-ae97-5cf9e7894951
            value: 机组
            varType: string
            variable_selector:
            - sys
            - query
          - comparison_operator: contains
            id: 488fa8f2-7f64-416c-ae13-8845533196aa
            value: 公用
            varType: string
            variable_selector:
            - sys
            - query
          - comparison_operator: contains
            id: e7d37d50-ff7f-45ef-9bba-1f4e1497fe8f
            value: 系统
            varType: string
            variable_selector:
            - sys
            - query
          id: 'true'
          logical_operator: or
        desc: ''
        selected: false
        title: 机组判断1
        type: if-else
      height: 178
      id: '17534221478590'
      position:
        x: 4129
        y: 4561
      positionAbsolute:
        x: 4129
        y: 4561
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 3c502bc1-bde6-476a-b20b-03a26026c399
          role: system
          text: '## 角色

            - 你是专业的文本内容理解与提取专家


            ## 输入

            - 用户问题：{{#sys.query#}}


            ## 机组名称识别规则

            - 机组同义描述：1机组、一机组、#1、1号机组、一号机组

            - 机组编号识别中不区分中文还是阿拉伯数字

            - 包含“公用”的为公用机组。

            - 包含“系统”的为系统机组


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出内容：从用户问题中识别机组名称，并按格式输出。


            ## 输出格式

            - x号机组，示例：1号机组，多个用逗号隔开

            - 多个机组公用的，以#开头，示例：#1、2机组公用

            - 其他根据语义匹配：三期公用、全厂公用、光伏系统、厂区风机系统


            ## 约束

            - 仅输出机组名称，禁止输出其他内容，机组名称中不要包含换行符”\n"。'
        selected: false
        title: 提取机组分析 (1)
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '17536685290160'
      position:
        x: 5799
        y: 4199
      positionAbsolute:
        x: 5799
        y: 4199
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n        text = text.replace(\"\
          \\n\",\"\")\n\n    return {\"result\": text,\"jizu\":\"jizu\"}\n"
        code_language: python3
        desc: ''
        outputs:
          jizu:
            children: null
            type: string
          result:
            children: null
            type: string
        selected: false
        title: 机组提取/检索变量 (1)
        type: code
        variables:
        - value_selector:
          - '17536685290160'
          - text
          variable: arg1
      height: 54
      id: '17536685554270'
      position:
        x: 6133
        y: 4181
      positionAbsolute:
        x: 6133
        y: 4181
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - qUedNXVQeKgVjYuPFmzRGQuZDwaq03Ny1P8L53NeclPax6xCJsUGtDCcKs1Gdget
        desc: ''
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: weighted_score
          reranking_model:
            model: bge-reranker-base
            provider: langgenius/openai_api_compatible/openai_api_compatible
          top_k: 4
          weights:
            keyword_setting:
              keyword_weight: 0
            vector_setting:
              embedding_model_name: bge-m3
              embedding_provider_name: langgenius/openai_api_compatible/openai_api_compatible
              vector_weight: 1
        query_variable_selector:
        - '17536685554270'
        - jizu
        retrieval_mode: multiple
        selected: false
        title: 机组编码检索 (1)
        type: knowledge-retrieval
      height: 92
      id: '17536685813050'
      position:
        x: 6467
        y: 4180
      positionAbsolute:
        x: 6467
        y: 4180
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 36ae95da-47d6-483f-b715-281fc1a5e261
          role: system
          text: '## 角色

            - 你是专业的文本内容理解与提取专家


            ## 输入

            - 用户问题：{{#sys.query#}}


            ## 机组名称识别规则

            - 机组同义描述：1机组、一机组、#1、1号机组、一号机组

            - 机组编号识别中不区分中文还是阿拉伯数字

            - 包含“公用”的为公用机组。

            - 包含“系统”的为系统机组


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出内容：从用户问题中识别机组名称，判断机组名称之后是否还有关于其他设备名称的描述，如果没有，问题中只有关于机组的描述则输出：是，如果问题中还有除机组外的设备名称描述则输出：否。


            ## 约束

            - 仅输出是或否，禁止输出其他内容，机组名称中不要包含换行符”\n"。'
        selected: false
        title: 机组识别 (1)
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '17536687740580'
      position:
        x: 7135
        y: 4182
      positionAbsolute:
        x: 7135
        y: 4182
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    \n\n    result =\
          \ text.strip()\n    \n    \n    return {\"result\": result}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 机组识别提取 (1)
        type: code
        variables:
        - value_selector:
          - '17536687740580'
          - text
          variable: arg1
      height: 54
      id: '17536687880260'
      position:
        x: 7469
        y: 4181
      positionAbsolute:
        x: 7469
        y: 4181
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: e2678149-59e6-401f-8c78-4b3f549d2e98
            value: 否
            varType: string
            variable_selector:
            - '17536687880260'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 机组判断 (1)
        type: if-else
      height: 126
      id: '17536688027980'
      position:
        x: 7803
        y: 4163
      positionAbsolute:
        x: 7803
        y: 4163
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: acc13f47-728f-460f-936f-f3f961c13fc7
          role: system
          text: '## 角色

            - 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            ## 输入

            - 用户的问题：{{#sys.query#}}

            - 表结构信息：{{#context#}}

            - 机组编码：{{#1753686034753.result#}}

            - 问题中的机组名：{{#17536685554270.result#}}

            - 当前时间：{{#1752124102117.text#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出sql语句：根据用户问题中的关键信息和表结构信息生成sql语句。


            ## SQL编写步骤

            -首先，如果用户问题中包含“机组”，根据问题中的机组名从机组编码中匹配机组编码，用每个机组编码对id做前缀匹配。类似：select id from
            em_equip_logic where id like ''xx%'' or id like ''xxx%''，再根据用户问题中“机组”一词之后的语句拆分出关键信息，结合em_equip_logic表的相应字段，分析出合理的查询条件字段。通常用户问题中的信息是关于设备名称的描述，优先分析考虑是否该用设备名称字段做查询条件。类似：kks_descr
            like ''%一次风机1A%''.

            - 如果用户问题中不包含“机组”，则直接根据用户问题拆分出关键信息，结合em_equip_logic表的相应字段，分析出合理的查询条件字段。通常用户问题中的信息是关于设备名称的描述，优先分析考虑是否该用设备名称字段做查询条件。类似：kks_descr
            like ''%一次风机1A%''

            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。


            ## 约束

            - 务必遵守约束内容

            - 不可编造查询的字段

            - 限定查询em_equip_logic表的id，如：select id from em_equip_logic

            - 只查询知识库中描述的关于em_equip_logic表的字段，不要涉及其他表的字段，禁止跨表混用字段，不要用select *写法

            - 除时间和日期类型字段外，必须使用like关键字模糊搜索

            - sql务必使用标准的sql语法，语法必须符合postgresql数据库

            - 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,''YYYY-MM-DD'')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date

            - 只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号"\n"等

            - 除了仅关于次数统计的问题，不要在sql中使用cout()

            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和em_equip_logic表结构信息，合理拆分出关键信息，分析出合理的查询条件字段。

            - 限制最多查询50条数据


            ## 示例

            - 用户问题：1机组鼓风机系统的更换记录有哪些？

            - 分析机组：“1机组”，where id like ''37781%''

            - 分析除机组外的系统或者具体设备信息：“鼓风机系统”，where kks_descr like ''%鼓风机系统%''

            - 最终SQL：select id from em_equip_logic where id like ''37781%'' and kks_descr
            like ''%鼓风机系统%''.'
        selected: false
        title: 设备编码分析 (1)
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '17536688300250'
      position:
        x: 8471
        y: 3898
      positionAbsolute:
        x: 8471
        y: 3898
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip().replace(\"\\n\",\"\")\n    \n    \n    return {\"\
          result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 设备编码SQL处理 (1)
        type: code
        variables:
        - value_selector:
          - '17536688300250'
          - text
          variable: arg1
      height: 54
      id: '17536688587820'
      position:
        x: 8805
        y: 3898
      positionAbsolute:
        x: 8805
        y: 3898
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 设备编码 (1)
        tool_configurations:
          db_name:
            type: constant
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          sql:
            type: mixed
            value: '{{#17536688587820.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17536689204620'
      position:
        x: 9139
        y: 3765
      positionAbsolute:
        x: 9139
        y: 3765
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 5c9099c9-7e31-4431-8a04-5bdc04a5d31b
          role: system
          text: '## 角色

            - 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            ## 输入

            - 用户的问题：{{#sys.query#}}

            - 设备编码：{{#17536689204620.text#}}

            - 表结构信息：{{#context#}}

            - 当前时间：{{#1752124102117.text#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出sql语句：根据用户问题中的关键信息和表结构信息生成sql语句。


            ## 约束

            - 务必遵守约束内容

            - 不可编造查询的字段

            - 限定查询em_equip_unit_change表

            - 只查询知识库中描述的关于em_equip_unit_change表的字段，不要涉及其他表的字段，禁止跨表混用字段，不要用select *写法

            - 除时间和日期类型字段外，必须使用like关键字模糊搜索

            - 从输入的设备编码中提取id，对每个id做前缀模糊匹配，or连接，类似：where equip_code like ''xxx%'' or
            equip_code like ''xx%''

            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和em_equip_unit_change表的相应字段，合理拆分出关键信息，分析出合理的查询条件字段。优先考虑使用设备名称字段做查询条件。类似：equip_name
            like ''%一次风机1A%''

            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。

            - sql务必使用标准的sql语法，语法必须符合postgresql数据库

            - 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,''YYYY-MM-DD'')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date

            -  只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号"\n"等

            - 除了仅关于次数统计的问题，不要在sql中使用cout()

            - 限制最多查询50条数据'
        selected: false
        title: 设备更换数据分析 (1)
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '17536689396100'
      position:
        x: 9473
        y: 3879
      positionAbsolute:
        x: 9473
        y: 3879
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 设备更换数据SQL处理 (1)
        type: code
        variables:
        - value_selector:
          - '17536689396100'
          - text
          value_type: string
          variable: arg1
      height: 54
      id: '17536689615380'
      position:
        x: 9807
        y: 3879
      positionAbsolute:
        x: 9807
        y: 3879
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 设备更换数据 (1)
        tool_configurations:
          db_name:
            type: constant
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          sql:
            type: mixed
            value: '{{#17536689615380.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17536689878980'
      position:
        x: 10141
        y: 3834
      positionAbsolute:
        x: 10141
        y: 3834
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 5c9099c9-7e31-4431-8a04-5bdc04a5d31b
          role: system
          text: '## 角色

            - 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            ## 输入

            - 用户的问题：{{#sys.query#}}

            - 机组编码：{{#1753686034753.result#}}

            - 机组名称：{{#17536685554270.result#}}

            - 当前时间：{{#1752124102117.text#}}

            - 表结构信息：{{#context#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出sql语句：根据用户问题中的关键信息和表结构信息生成sql语句。


            ## 约束

            - 务必遵守约束内容

            - 不可编造查询的字段

            - 限定查询em_equip_unit_change表

            - 只查询知识库中描述的关于em_equip_unit_change表的字段，不要涉及其他表的字段，禁止跨表混用字段，不要用select *写法

            - 除时间和日期类型字段外，必须使用like关键字模糊搜索

            - 根据机组名称从机组编码中匹配机组编码，用每个机组编码对tplnr 做前缀匹配，类似：where equip_code like ''xxx%''
            or equip_code like ''xx%''

            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和表结构信息，合理拆分出关键信息，再结合em_equip_unit_change表的相应字段，分析出合理的查询条件字段。优先考虑使用设备名称字段做查询条件。类似：equip_name
            like ''%一次风机1A%''

            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。

            - sql务必使用标准的sql语法，语法必须符合postgresql数据库

            - 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,''YYYY-MM-DD'')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date

            -  只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号"\n"等

            - 除了仅关于次数统计的问题，不要在sql中使用cout()

            - 限制最多查询50条数据'
        selected: false
        title: 设备更换数据分析 (2)
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '17536690725620'
      position:
        x: 9473
        y: 4201
      positionAbsolute:
        x: 9473
        y: 4201
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 设备更换数据SQL处理 (2)
        type: code
        variables:
        - value_selector:
          - '17536690725620'
          - text
          variable: arg1
      height: 54
      id: '17536692665040'
      position:
        x: 9807
        y: 4201
      positionAbsolute:
        x: 9807
        y: 4201
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 设备更换数据 (2)
        tool_configurations:
          db_name:
            type: constant
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          sql:
            type: mixed
            value: '{{#17536692665040.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17536693002730'
      position:
        x: 10141
        y: 4156
      positionAbsolute:
        x: 10141
        y: 4156
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    return {\n        \"result\": arg1\n\
          \    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: array[object]
        selected: false
        title: 暂存机组编码（1）
        type: code
        variables:
        - value_selector:
          - '17536685813050'
          - result
          variable: arg1
      height: 54
      id: '1753686034753'
      position:
        x: 6801
        y: 4181
      positionAbsolute:
        x: 6801
        y: 4181
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1) -> dict:\n    return {\n        \"result\"\
          : json.dumps(arg1,indent=2,ensure_ascii=False)\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 处理措施
        type: code
        variables:
        - value_selector:
          - '1752224944843'
          - result
          variable: arg1
      height: 54
      id: '1753692462580'
      position:
        x: 10141
        y: 6138
      positionAbsolute:
        x: 10141
        y: 6138
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: 7e032c73-ba26-4d73-8967-4a294a1db4d2
            value: 机组
            varType: string
            variable_selector:
            - sys
            - query
          - comparison_operator: contains
            id: 13641586-e46a-4abb-96d1-b81bbb06c13a
            value: 公用
            varType: string
            variable_selector:
            - sys
            - query
          - comparison_operator: contains
            id: 1bae14dd-cad3-4dd3-823d-bbe67bbc9cea
            value: 系统
            varType: string
            variable_selector:
            - sys
            - query
          id: 'true'
          logical_operator: or
        desc: ''
        selected: false
        title: 机组判断3
        type: if-else
      height: 178
      id: '1753692992195'
      position:
        x: 4129
        y: 3427
      positionAbsolute:
        x: 4129
        y: 3427
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: e28ef95f-f363-465a-8652-3fa4f27005fd
          role: system
          text: '## 角色

            - 你是专业的文本内容理解与提取专家


            ## 输入

            - 用户问题：{{#sys.query#}}


            ## 机组名称识别规则

            - 机组同义描述：1机组、一机组、#1、1号机组、一号机组

            - 机组编号识别中不区分中文还是阿拉伯数字

            - 包含“公用”的为公用机组。

            - 包含“系统”的为系统机组


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出内容：从用户问题中识别机组名称，并按格式输出。


            ## 输出格式

            - x号机组，示例：1号机组，多个用逗号隔开

            - 多个机组公用的，以#开头，示例：#1、2机组公用

            - 其他根据语义匹配：三期公用、全厂公用、光伏系统、厂区风机系统


            ## 约束

            - 仅输出机组名称，禁止输出其他内容，机组名称中不要包含换行符”\n"。'
        selected: false
        title: 机组提取分析2
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1753693376845'
      position:
        x: 5799
        y: 3065
      positionAbsolute:
        x: 5799
        y: 3065
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n        text = text.replace(\"\
          \\n\",\"\")\n\n    return {\"result\": text,\"jizu\":\"jizu\"}\n"
        code_language: python3
        desc: ''
        outputs:
          jizu:
            children: null
            type: string
          result:
            children: null
            type: string
        selected: false
        title: 机组提取/检索变量2
        type: code
        variables:
        - value_selector:
          - '1753693376845'
          - text
          variable: arg1
      height: 54
      id: '1753693432069'
      position:
        x: 6133
        y: 3047
      positionAbsolute:
        x: 6133
        y: 3047
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - qUedNXVQeKgVjYuPFmzRGQuZDwaq03Ny1P8L53NeclPax6xCJsUGtDCcKs1Gdget
        desc: ''
        metadata_filtering_mode: disabled
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: weighted_score
          reranking_model:
            model: bge-reranker-base
            provider: langgenius/openai_api_compatible/openai_api_compatible
          top_k: 4
          weights:
            keyword_setting:
              keyword_weight: 0
            vector_setting:
              embedding_model_name: bge-m3
              embedding_provider_name: langgenius/openai_api_compatible/openai_api_compatible
              vector_weight: 1
        query_variable_selector:
        - '1753693432069'
        - jizu
        retrieval_mode: multiple
        selected: false
        title: 机组编码检索3
        type: knowledge-retrieval
      height: 92
      id: '1753693474331'
      position:
        x: 6467
        y: 3046
      positionAbsolute:
        x: 6467
        y: 3046
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    return {\n        \"result\": arg1\n\
          \    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: array[object]
        selected: false
        title: 暂存机组编码2
        type: code
        variables:
        - value_selector:
          - '1753693474331'
          - result
          variable: arg1
      height: 54
      id: '1753693575387'
      position:
        x: 6801
        y: 3047
      positionAbsolute:
        x: 6801
        y: 3047
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: dd795ea9-4164-460a-b221-d7cdb12e975d
          role: system
          text: '## 角色

            - 你是专业的文本内容理解与提取专家


            ## 输入

            - 用户问题：{{#sys.query#}}


            ## 机组名称识别规则

            - 机组同义描述：1机组、一机组、#1、1号机组、一号机组

            - 机组编号识别中不区分中文还是阿拉伯数字

            - 包含“公用”的为公用机组。

            - 包含“系统”的为系统机组


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出内容：从用户问题中识别机组名称，判断机组名称之后是否还有关于其他设备名称的描述，如果没有，问题中只有关于机组的描述则输出：是，如果问题中还有除机组外的设备名称描述则输出：否。


            ## 约束

            - 仅输出是或否，禁止输出其他内容，机组名称中不要包含换行符”\n"。'
        selected: false
        title: 机组识别2
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1753693628042'
      position:
        x: 7135
        y: 3048
      positionAbsolute:
        x: 7135
        y: 3048
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    \n\n    result =\
          \ text.strip()\n    \n    \n    return {\"result\": result}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 机组识别提取2
        type: code
        variables:
        - value_selector:
          - '1753693628042'
          - text
          variable: arg1
      height: 54
      id: '1753693670548'
      position:
        x: 7469
        y: 3047
      positionAbsolute:
        x: 7469
        y: 3047
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: cf767a5c-9bb4-4692-ba96-57fc8d1e38df
            value: 否
            varType: string
            variable_selector:
            - '1753693670548'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 机组判断2
        type: if-else
      height: 126
      id: '1753693725332'
      position:
        x: 7803
        y: 3029
      positionAbsolute:
        x: 7803
        y: 3029
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 180a9151-45fc-4c4e-a75a-4c8fd3d29cd4
          role: system
          text: '## 角色

            - 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            ## 输入

            - 用户的问题：{{#sys.query#}}

            - 表结构信息：{{#context#}}

            - 机组编码：{{#1753693575387.result#}}

            - 问题中的机组名：{{#1753693432069.result#}}

            - 当前时间：{{#1752124102117.text#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出sql语句：根据用户问题中的关键信息和表结构信息生成sql语句。


            ## SQL编写步骤

            -首先，如果用户问题中包含“机组”，根据问题中的机组名从机组编码中匹配机组编码，用每个机组编码对id做前缀匹配。类似：select id from
            em_equip_logic where id like ''xx%'' or id like ''xxx%''，再根据用户问题中“机组”一词之后的语句拆分出关键信息，结合em_equip_logic表的相应字段，分析出合理的查询条件字段。通常用户问题中的信息是关于设备名称的描述，优先分析考虑是否该用设备名称字段做查询条件。类似：kks_descr
            like ''%一次风机1A%''.

            - 如果用户问题中不包含“机组”，则直接根据用户问题拆分出关键信息，结合em_equip_logic表的相应字段，分析出合理的查询条件字段。通常用户问题中的信息是关于设备名称的描述，优先分析考虑是否该用设备名称字段做查询条件。类似：kks_descr
            like ''%一次风机1A%''

            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。


            ## 约束

            - 务必遵守约束内容

            - 不可编造查询的字段

            - 限定查询em_equip_logic表的id，如：select id from em_equip_logic

            - 只查询知识库中描述的关于em_equip_logic表的字段，不要涉及其他表的字段，禁止跨表混用字段，不要用select *写法

            - 除时间和日期类型字段外，必须使用like关键字模糊搜索

            - sql务必使用标准的sql语法，语法必须符合postgresql数据库

            - 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,''YYYY-MM-DD'')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date

            - 只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号"\n"等

            - 除了仅关于次数统计的问题，不要在sql中使用cout()

            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和em_equip_logic表结构信息，合理拆分出关键信息，分析出合理的查询条件字段。

            - 限制最多查询50条数据


            ## 示例

            - 用户问题：1机组鼓风机系统的检修记录有哪些？

            - 分析机组：“1机组”，where id like ''37781%''

            - 分析除机组外的系统或者具体设备信息：“鼓风机系统”，where kks_descr like ''%鼓风机系统%''

            - 最终SQL：select id from em_equip_logic where id like ''37781%'' and kks_descr
            like ''%鼓风机系统%''.'
        selected: false
        title: 设备编码分析
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1753693772425'
      position:
        x: 8471
        y: 2763
      positionAbsolute:
        x: 8471
        y: 2763
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip().replace(\"\\n\",\"\")\n    \n    \n    return {\"\
          result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 设备编码SQL处理2
        type: code
        variables:
        - value_selector:
          - '1753693772425'
          - text
          variable: arg1
      height: 54
      id: '1753693930013'
      position:
        x: 8805
        y: 2764
      positionAbsolute:
        x: 8805
        y: 2764
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 设备编码2
        tool_configurations:
          db_name:
            type: constant
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          sql:
            type: mixed
            value: '{{#1753693930013.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17536939819710'
      position:
        x: 9139
        y: 2631
      positionAbsolute:
        x: 9139
        y: 2631
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 77513204-73ed-485c-85fd-6ab87a7fc556
          role: system
          text: '## 角色

            - 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            ## 输入

            - 用户的问题：{{#sys.query#}}

            - 设备编码：{{#17536939819710.text#}}

            - 表结构信息：{{#context#}}

            - 当前时间：{{#1752124102117.text#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出sql语句：根据用户问题中的关键信息和表结构信息生成sql语句。


            ## 约束

            - 务必遵守约束内容

            - 不可编造查询的字段

            - 限定查询em_equip_recondition_remark_six表

            - 只查询知识库中描述的关于em_equip_recondition_remark_six表的字段，不要涉及其他表的字段，禁止跨表混用字段，不要用select
            *写法

            - 除时间和日期类型字段外，必须使用like关键字模糊搜索

            - 从输入的设备编码中提取id，对每个id做前缀模糊匹配，or连接，类似：where equip_code like ''xxx%'' or
            equip_code like ''xx%''

            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和em_equip_recondition_remark_six表的相应字段，合理拆分出关键信息，分析出合理的查询条件字段。优先考虑使用设备名称字段做查询条件。类似：equip_name
            like ''%一次风机1A%''

            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。

            - sql务必使用标准的sql语法，语法必须符合postgresql数据库

            - 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,''YYYY-MM-DD'')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date

            - 只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号"\n"等

            - 除了仅关于次数统计的问题，不要在sql中使用cout()

            - 限制最多查询50条数据'
        selected: false
        title: 设备检修数据分析2
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1753694117311'
      position:
        x: 9473
        y: 2745
      positionAbsolute:
        x: 9473
        y: 2745
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 设备检修数据sql处理2
        type: code
        variables:
        - value_selector:
          - '1753694117311'
          - text
          variable: arg1
      height: 54
      id: '1753694216081'
      position:
        x: 9807
        y: 2745
      positionAbsolute:
        x: 9807
        y: 2745
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 设备检修数据2
        tool_configurations:
          db_name:
            type: constant
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          sql:
            type: mixed
            value: '{{#1753694216081.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17536946610590'
      position:
        x: 10141
        y: 2700
      positionAbsolute:
        x: 10141
        y: 2700
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: bd494702-4067-4a1e-b20c-a108ae976992
          role: system
          text: '## 角色

            - 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            ## 输入

            - 用户的问题：{{#sys.query#}}

            - 机组编码：{{#1753693575387.result#}}

            - 机组名称：{{#1753693432069.result#}}

            - 表结构信息：{{#context#}}

            - 当前时间：{{#1752124102117.text#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出sql语句：根据用户问题中的关键信息和表结构信息生成sql语句。


            ## 约束

            - 务必遵守约束内容

            - 不可编造查询的字段

            - 限定查询em_equip_recondition_remark_six表

            - 只查询知识库中描述的关于em_equip_recondition_remark_six表的字段，不要涉及其他表的字段，禁止跨表混用字段，不要用select
            *写法

            - 除时间和日期类型字段外，必须使用like关键字模糊搜索

            - 根据机组名称从机组编码中匹配机组编码，用每个机组编码对tplnr 做前缀匹配，类似：where equip_code like ''xxx%''
            or equip_code like ''xx%''

            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和em_equip_recondition_remark_six表的相应字段，合理拆分出关键信息，分析出合理的查询条件字段。优先考虑使用设备名称字段做查询条件。类似：equip_name
            like ''%一次风机1A%''

            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。

            - sql务必使用标准的sql语法，语法必须符合postgresql数据库

            - 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,''YYYY-MM-DD'')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date

            - 只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号"\n"等

            - 除了仅关于次数统计的问题，不要在sql中使用cout()

            - 限制最多查询50条数据'
        selected: false
        title: 设备检修数据分析1
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1753694801620'
      position:
        x: 9473
        y: 3065
      positionAbsolute:
        x: 9473
        y: 3065
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 设备检修数据sql处理1
        type: code
        variables:
        - value_selector:
          - '1753694801620'
          - text
          variable: arg1
      height: 54
      id: '1753696446396'
      position:
        x: 9807
        y: 3067
      positionAbsolute:
        x: 9807
        y: 3067
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 设备检修数据1
        tool_configurations:
          db_name:
            type: constant
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          sql:
            type: mixed
            value: '{{#1753696446396.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17536965411860'
      position:
        x: 10141
        y: 3022
      positionAbsolute:
        x: 10141
        y: 3022
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: 7e032c73-ba26-4d73-8967-4a294a1db4d2
            value: 机组
            varType: string
            variable_selector:
            - sys
            - query
          - comparison_operator: contains
            id: 13641586-e46a-4abb-96d1-b81bbb06c13a
            value: 公用
            varType: string
            variable_selector:
            - sys
            - query
          - comparison_operator: contains
            id: 1bae14dd-cad3-4dd3-823d-bbe67bbc9cea
            value: 系统
            varType: string
            variable_selector:
            - sys
            - query
          id: 'true'
          logical_operator: or
        desc: ''
        selected: false
        title: 机组判断4
        type: if-else
      height: 178
      id: '17537539682150'
      position:
        x: 4797
        y: 2355
      positionAbsolute:
        x: 4797
        y: 2355
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: e28ef95f-f363-465a-8652-3fa4f27005fd
          role: system
          text: '## 角色

            - 你是专业的文本内容理解与提取专家


            ## 输入

            - 用户问题：{{#sys.query#}}


            ## 机组名称识别规则

            - 机组同义描述：1机组、一机组、#1、1号机组、一号机组

            - 机组编号识别中不区分中文还是阿拉伯数字

            - 包含“公用”的为公用机组。

            - 包含“系统”的为系统机组


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出内容：从用户问题中识别机组名称，并按格式输出。


            ## 输出格式

            - x号机组，示例：1号机组，多个用逗号隔开

            - 多个机组公用的，以#开头，示例：#1、2机组公用

            - 其他根据语义匹配：三期公用、全厂公用、光伏系统、厂区风机系统


            ## 约束

            - 仅输出机组名称，禁止输出其他内容，机组名称中不要包含换行符”\n"。'
        selected: false
        title: 机组提取分析3
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '17537545155100'
      position:
        x: 6467
        y: 1611
      positionAbsolute:
        x: 6467
        y: 1611
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n        text = text.replace(\"\
          \\n\",\"\")\n\n    return {\"result\": text,\"jizu\":\"jizu\"}\n"
        code_language: python3
        desc: ''
        outputs:
          jizu:
            children: null
            type: string
          result:
            children: null
            type: string
        selected: false
        title: 机组提取/检索变量3
        type: code
        variables:
        - value_selector:
          - '17537545155100'
          - text
          variable: arg1
      height: 54
      id: '17537546064590'
      position:
        x: 6801
        y: 1611
      positionAbsolute:
        x: 6801
        y: 1611
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - qUedNXVQeKgVjYuPFmzRGQuZDwaq03Ny1P8L53NeclPax6xCJsUGtDCcKs1Gdget
        desc: ''
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: weighted_score
          reranking_model:
            model: bge-reranker-base
            provider: langgenius/openai_api_compatible/openai_api_compatible
          top_k: 4
          weights:
            keyword_setting:
              keyword_weight: 0
            vector_setting:
              embedding_model_name: bge-m3
              embedding_provider_name: langgenius/openai_api_compatible/openai_api_compatible
              vector_weight: 1
        query_variable_selector:
        - '17537546064590'
        - jizu
        retrieval_mode: multiple
        selected: false
        title: 机组编码检索4
        type: knowledge-retrieval
      height: 92
      id: '17537547361400'
      position:
        x: 7135
        y: 1611
      positionAbsolute:
        x: 7135
        y: 1611
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    return {\n        \"result\": arg1\n\
          \    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: array[object]
        selected: false
        title: 暂存机组编码3
        type: code
        variables:
        - value_selector:
          - '17537547361400'
          - result
          variable: arg1
      height: 54
      id: '17537547956660'
      position:
        x: 7469
        y: 1611
      positionAbsolute:
        x: 7469
        y: 1611
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: dd795ea9-4164-460a-b221-d7cdb12e975d
          role: system
          text: '## 角色

            - 你是专业的文本内容理解与提取专家


            ## 输入

            - 用户问题：{{#sys.query#}}


            ## 机组名称识别规则

            - 机组同义描述：1机组、一机组、#1、1号机组、一号机组

            - 机组编号识别中不区分中文还是阿拉伯数字

            - 包含“公用”的为公用机组。

            - 包含“系统”的为系统机组


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出内容：从用户问题中识别机组名称，判断机组名称之后是否还有关于其他设备名称的描述，如果没有，问题中只有关于机组的描述则输出：是，如果问题中还有除机组外的设备名称描述则输出：否。


            ## 约束

            - 仅输出是或否，禁止输出其他内容，机组名称中不要包含换行符”\n"。'
        selected: false
        title: 机组识别3
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '17537548612070'
      position:
        x: 7803
        y: 1611
      positionAbsolute:
        x: 7803
        y: 1611
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    \n\n    result =\
          \ text.strip()\n    \n    \n    return {\"result\": result}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 机组识别提取3
        type: code
        variables:
        - value_selector:
          - '17537548612070'
          - text
          variable: arg1
      height: 54
      id: '17537549363190'
      position:
        x: 8137
        y: 1611
      positionAbsolute:
        x: 8137
        y: 1611
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: cf767a5c-9bb4-4692-ba96-57fc8d1e38df
            value: 否
            varType: string
            variable_selector:
            - '17537549363190'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 机组判断3
        type: if-else
      height: 126
      id: '17537549960650'
      position:
        x: 8471
        y: 1611
      positionAbsolute:
        x: 8471
        y: 1611
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 180a9151-45fc-4c4e-a75a-4c8fd3d29cd4
          role: system
          text: '## 角色

            - 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            ## 输入

            - 用户的问题：{{#sys.query#}}

            - 表结构信息：{{#context#}}

            - 机组编码：{{#17537547956660.result#}}

            - 问题中的机组名：{{#17537546064590.result#}}

            - 当前时间：{{#1752124102117.text#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出sql语句：根据用户问题中的关键信息和表结构信息生成sql语句。


            ## SQL编写步骤

            -首先，如果用户问题中包含“机组”，根据问题中的机组名从机组编码中匹配机组编码，用每个机组编码对id做前缀匹配。类似：where id like
            ''xx%'' or id like ''xxx%''，再根据用户问题中“机组”一词之后的语句拆分出关键信息，结合em_equip_logic表的相应字段，分析出合理的查询条件字段。类似：kks_descr
            like ''%一次风机1A%''.

            - 如果用户问题中不包含“机组”，则直接根据用户问题拆分出关键信息，结合em_equip_logic表的相应字段，分析出合理的查询条件字段。通常用户问题中的信息是关于设备名称的描述，优先分析考虑是否该用设备名称字段做查询条件。类似：kks_descr
            like ''%一次风机1A%''

            - 根据用户问题拆分出关键信息，结合em_equip_logic表的相应字段。分析出合理的查询条件字段，通常用户问题中的信息是关于设备名称的描述，优先分析考虑是否该用设备名称字段做查询条件。类似：kks_descr
            like ''%一次风机1A%''

            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。


            ## 约束

            - 务必遵守约束内容

            - 不可编造查询的字段

            - 限定查询em_equip_logic表

            - 只查询知识库中描述的关于em_equip_logic表的字段，不要涉及其他表的字段，禁止跨表混用字段，不要用select *写法

            - 除时间和日期类型字段外，必须使用like关键字模糊搜索

            - sql务必使用标准的sql语法，语法必须符合postgresql数据库

            - 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,''YYYY-MM-DD'')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date

            - 只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号"\n"等

            - 除了仅关于次数统计的问题，不要在sql中使用cout()

            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和em_equip_logic表结构信息，合理拆分出关键信息，分析出合理的查询条件字段。

            - 限制最多查询50条数据'
        selected: false
        title: 设备编码分析3
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '17537550365190'
      position:
        x: 9473
        y: 1611
      positionAbsolute:
        x: 9473
        y: 1611
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip().replace(\"\\n\",\"\")\n    \n    \n    return {\"\
          result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 设备编码SQL处理2 (1)
        type: code
        variables:
        - value_selector:
          - '17537550365190'
          - text
          variable: arg1
      height: 54
      id: '17537550778900'
      position:
        x: 9807
        y: 1611
      positionAbsolute:
        x: 9807
        y: 1611
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 设备基础数据（1）
        tool_configurations:
          db_name:
            type: constant
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          sql:
            type: mixed
            value: '{{#17537550778900.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17537551170660'
      position:
        x: 10141
        y: 1566
      positionAbsolute:
        x: 10141
        y: 1566
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 04c8f62d-ed1d-42f9-bbb7-47a134bd652c
          role: system
          text: '## 角色

            - 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            ## 输入

            - 用户的问题：{{#sys.query#}}

            - 机组编码：{{#17537547956660.result#}}

            - 机组名称：{{#17537546064590.result#}}

            - 表结构信息：{{#context#}}

            - 当前时间：{{#1752124102117.text#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出sql语句：根据用户问题中的关键信息和表结构信息生成sql语句。


            ## 约束

            - 务必遵守约束内容

            - 不可编造查询的字段

            - 限定查询em_equip_logic表

            - 只查询知识库中描述的关于em_equip_logic表的字段，不要涉及其他表的字段，禁止跨表混用字段，不要用select *写法

            - 除时间和日期类型字段外，必须使用like关键字模糊搜索

            - 根据机组名称从机组编码中匹配机组编码，用每个机组编码对tplnr 做前缀匹配，类似：where id like ''xxx%'' or
            id like ''xx%''

            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和em_equip_logic表的相应字段，合理拆分出关键信息，分析出合理的查询条件字段。通常用户问题中的信息是关于设备名称的描述，优先分析考虑是否该用设备名称字段做查询条件。类似：kks_descr
            like ''%一次风机1A%''

            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。

            - sql务必使用标准的sql语法，语法必须符合postgresql数据库

            - 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,''YYYY-MM-DD'')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date

            - 只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号"\n"等

            - 除了仅关于次数统计的问题，不要在sql中使用cout()

            - 限制最多查询50条数据'
        selected: false
        title: 设备基础数据分析 (2)
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '17537553693750'
      position:
        x: 9473
        y: 1933
      positionAbsolute:
        x: 9473
        y: 1933
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 设备基础数据sql处理 (2)
        type: code
        variables:
        - value_selector:
          - '17537553693750'
          - text
          variable: arg1
      height: 54
      id: '17537554009950'
      position:
        x: 9807
        y: 1933
      positionAbsolute:
        x: 9807
        y: 1933
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 设备基础数据 (2)
        tool_configurations:
          db_name:
            type: constant
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          sql:
            type: mixed
            value: '{{#17537554009950.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17537554222360'
      position:
        x: 10141
        y: 1888
      positionAbsolute:
        x: 10141
        y: 1888
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: is
            id: c61d25ef-956e-4829-b3d1-c4d53df5f759
            value: 生产信息
            varType: string
            variable_selector:
            - '1752038279481'
            - result
          id: 'true'
          logical_operator: and
        - case_id: 6d81d4e3-93c1-4c5c-bb2d-bdb15bdf1c4f
          conditions:
          - comparison_operator: contains
            id: 55b16aad-7980-4b95-994b-3e12a4aa62db
            value: 设备基础信息
            varType: string
            variable_selector:
            - '1752038279481'
            - result
          - comparison_operator: contains
            id: 0fac8d8a-17eb-40a1-b5e4-cdbdb36667d2
            value: 设备检修记录
            varType: string
            variable_selector:
            - '1752038279481'
            - result
          - comparison_operator: contains
            id: cd662b7e-db53-4ddb-919c-7d01823794f4
            value: 设备更换记录
            varType: string
            variable_selector:
            - '1752038279481'
            - result
          - comparison_operator: contains
            id: 5831a1d0-1969-489e-8a2d-a6d01ca151fd
            value: 设备缺陷记录
            varType: string
            variable_selector:
            - '1752038279481'
            - result
          - comparison_operator: contains
            id: d1c7f8aa-69d9-4545-b2db-b21cf16a824a
            value: 测点信息
            varType: string
            variable_selector:
            - '1752038279481'
            - result
          - comparison_operator: contains
            id: f85b9ff1-b4f8-4099-be63-0cd809e28f5f
            value: 处理规程
            varType: string
            variable_selector:
            - '1752038279481'
            - result
          id: 6d81d4e3-93c1-4c5c-bb2d-bdb15bdf1c4f
          logical_operator: or
        - case_id: 7e1170c5-6682-4434-a1d4-546fd53301ec
          conditions:
          - comparison_operator: is
            id: 6128ccac-4a60-451e-986e-82bec6621e89
            value: 两票
            varType: string
            variable_selector:
            - '1752038279481'
            - result
          id: 7e1170c5-6682-4434-a1d4-546fd53301ec
          logical_operator: and
        - case_id: 5421fe17-22c9-43a6-b8a6-e11dd61c5793
          conditions:
          - comparison_operator: is
            id: 933a263e-d4ca-413f-ad58-3dad188249ed
            value: 闲聊
            varType: string
            variable_selector:
            - '1752038279481'
            - result
          logical_operator: and
        desc: ''
        selected: false
        title: 条件分支 21
        type: if-else
      height: 400
      id: '1753838057582'
      position:
        x: 1700
        y: 7181
      positionAbsolute:
        x: 1700
        y: 7181
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        selected: false
        template: "{% set l = 0 %}\r\n\r\n{% if arg1 is not none%}\r\n    {% set l\
          \ = l + (arg1 | length)%}\r\n{% endif %}\r\n{% if arg2 is not none%}\r\n\
          \    {% set l = l + (arg2 | length)%}\r\n{% endif %}\r\n{% if arg3 is not\
          \ none%}\r\n    {% set l = l + (arg3 | length)%}\r\n{% endif %}\r\n{% if\
          \ arg4 is not none%}\r\n    {% set l = l + (arg4 | length)%}\r\n{% endif\
          \ %}\r\n{% if arg5 is not none%}\r\n    {% set l = l + (arg5 | length)%}\r\
          \n{% endif %}\r\n{% if arg6 is not none%}\r\n    {% set l = l + (arg6 |\
          \ length)%}\r\n{% endif %}\r\n{% if arg7 is not none%}\r\n    {% set l =\
          \ l + (arg7 | length)%}\r\n{% endif %}\r\n{% if arg8 is not none%}\r\n \
          \   {% set l = l + (arg8 | length)%}\r\n{% endif %}\r\n{% if arg9 is not\
          \ none%}\r\n    {% set l = l + (arg9 | length)%}\r\n{% endif %}\r\n{% if\
          \ arg10 is not none%}\r\n    {% set l = l + (arg10 | length)%}\r\n{% endif\
          \ %}\r\n{% if arg11 is not none%}\r\n    {% set l = l + (arg11 | length)%}\r\
          \n{% endif %}\r\n{% if arg12 is not none%}\r\n    {% set l = l + (arg12\
          \ | length)%}\r\n{% endif %}\r\n{% if arg13 is not none%}\r\n    {% set\
          \ l = l + (arg13 | length)%}\r\n{% endif %}\r\n{% if arg14 is not none%}\r\
          \n    {% set l = l + (arg14 | length)%}\r\n{% endif %}\r\n{% if arg15 is\
          \ not none%}\r\n    {% set l = l + (arg15 | length)%}\r\n{% endif %}\r\n\
          \r\n{% if l <= 20000 %}\r\n    {% if arg1 is not none%}\r\n        {{ arg1\
          \ }}\r\n    {% endif %}\r\n    {% if arg2 is not none%}\r\n        {{ arg2\
          \ }}\r\n    {% endif %}\r\n    {% if arg3 is not none%}\r\n        {{ arg3\
          \ }}\r\n    {% endif %}\r\n    {% if arg4 is not none%}\r\n        {{ arg4\
          \ }}\r\n    {% endif %}\r\n    {% if arg5 is not none%}\r\n        {{ arg5\
          \ }}\r\n    {% endif %}\r\n    {% if arg6 is not none%}\r\n        {{ arg6\
          \ }}\r\n    {% endif %}\r\n    {% if arg7 is not none%}\r\n        {{ arg7\
          \ }}\r\n    {% endif %}\r\n    {% if arg8 is not none%}\r\n        {{ arg8\
          \ }}\r\n    {% endif %}\r\n    {% if arg9 is not none%}\r\n        {{ arg9\
          \ }}\r\n    {% endif %}\r\n    {% if arg10 is not none%}\r\n        {{ arg10\
          \ }}\r\n    {% endif %}\r\n    {% if arg11 is not none%}\r\n        {{ arg11\
          \ }}\r\n    {% endif %}\r\n    {% if arg12 is not none%}\r\n        {{ arg12\
          \ }}\r\n    {% endif %}\r\n    {% if arg13 is not none%}\r\n        {{ arg13\
          \ }}\r\n    {% endif %}\r\n    {% if arg14 is not none%}\r\n        {{ arg14\
          \ }}\r\n    {% endif %}\r\n    {% if arg15 is not none%}\r\n        {{ arg15\
          \ }}\r\n    {% endif %}\r\n{% else %}\r\n    根据您的问题，答案信息过多，不便阅读，请详细描述问题内容，重新提问！\r\
          \n{% endif %}"
        title: 模板转换
        type: template-transform
        variables:
        - value_selector:
          - '1752196164770'
          - body
          variable: arg1
        - value_selector:
          - '17537551170660'
          - text
          variable: arg2
        - value_selector:
          - '17537554222360'
          - text
          variable: arg3
        - value_selector:
          - '1752040747851'
          - text
          variable: arg4
        - value_selector:
          - '17536965411860'
          - text
          variable: arg5
        - value_selector:
          - '17536946610590'
          - text
          variable: arg6
        - value_selector:
          - '1752040913487'
          - text
          variable: arg7
        - value_selector:
          - '17549969665540'
          - text
          value_type: string
          variable: arg8
        - value_selector:
          - '17549968869940'
          - text
          value_type: string
          variable: arg9
        - value_selector:
          - '17549972269860'
          - text
          value_type: string
          variable: arg10
        - value_selector:
          - '17536689878980'
          - text
          variable: arg11
        - value_selector:
          - '17536693002730'
          - text
          variable: arg12
        - value_selector:
          - '17526600580160'
          - text
          variable: arg13
        - value_selector:
          - '1753692462580'
          - result
          variable: arg14
        - value_selector:
          - '1753418430234'
          - result
          variable: arg15
      height: 54
      id: '1753861875335'
      position:
        x: 10475
        y: 3668
      positionAbsolute:
        x: 10475
        y: 3668
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - c2VNwtKPYV6tuVxRTIvqltvbM5JsOgmcz/A1nkkmR7aZvD8y+nNZoXkAlD5Ik0iq
        desc: ''
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: weighted_score
          reranking_model:
            model: bge-reranker-base
            provider: langgenius/openai_api_compatible/openai_api_compatible
          top_k: 4
          weights:
            keyword_setting:
              keyword_weight: 0
            vector_setting:
              embedding_model_name: bge-m3
              embedding_provider_name: langgenius/openai_api_compatible/openai_api_compatible
              vector_weight: 1
        query_variable_selector:
        - '1753873726033'
        - result
        retrieval_mode: multiple
        selected: false
        title: 意图示例检索
        type: knowledge-retrieval
      height: 92
      id: '1753873679200'
      position:
        x: 699.5157165665103
        y: 7181
      positionAbsolute:
        x: 699.5157165665103
        y: 7181
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main() -> dict:\n    return {\n        \"result\": \"intentions\"\
          \n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 定义意图检索变量
        type: code
        variables: []
      height: 54
      id: '1753873726033'
      position:
        x: 364
        y: 7181
      positionAbsolute:
        x: 364
        y: 7181
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: '%Y-%m-%d %H:%M:%S'
          form: form
          human_description:
            en_US: Time format in strftime standard.
            ja_JP: Time format in strftime standard.
            pt_BR: Time format in strftime standard.
            zh_Hans: strftime 标准的时间格式。
          label:
            en_US: Format
            ja_JP: Format
            pt_BR: Format
            zh_Hans: 格式
          llm_description: null
          max: null
          min: null
          name: format
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: UTC
          form: form
          human_description:
            en_US: Timezone
            ja_JP: Timezone
            pt_BR: Timezone
            zh_Hans: 时区
          label:
            en_US: Timezone
            ja_JP: Timezone
            pt_BR: Timezone
            zh_Hans: 时区
          llm_description: null
          max: null
          min: null
          name: timezone
          options:
          - label:
              en_US: UTC
              ja_JP: UTC
              pt_BR: UTC
              zh_Hans: UTC
            value: UTC
          - label:
              en_US: America/New_York
              ja_JP: America/New_York
              pt_BR: America/New_York
              zh_Hans: 美洲/纽约
            value: America/New_York
          - label:
              en_US: America/Los_Angeles
              ja_JP: America/Los_Angeles
              pt_BR: America/Los_Angeles
              zh_Hans: 美洲/洛杉矶
            value: America/Los_Angeles
          - label:
              en_US: America/Chicago
              ja_JP: America/Chicago
              pt_BR: America/Chicago
              zh_Hans: 美洲/芝加哥
            value: America/Chicago
          - label:
              en_US: America/Sao_Paulo
              ja_JP: America/Sao_Paulo
              pt_BR: América/São Paulo
              zh_Hans: 美洲/圣保罗
            value: America/Sao_Paulo
          - label:
              en_US: Asia/Shanghai
              ja_JP: Asia/Shanghai
              pt_BR: Asia/Shanghai
              zh_Hans: 亚洲/上海
            value: Asia/Shanghai
          - label:
              en_US: Asia/Ho_Chi_Minh
              ja_JP: Asia/Ho_Chi_Minh
              pt_BR: Ásia/Ho Chi Minh
              zh_Hans: 亚洲/胡志明市
            value: Asia/Ho_Chi_Minh
          - label:
              en_US: Asia/Tokyo
              ja_JP: Asia/Tokyo
              pt_BR: Asia/Tokyo
              zh_Hans: 亚洲/东京
            value: Asia/Tokyo
          - label:
              en_US: Asia/Dubai
              ja_JP: Asia/Dubai
              pt_BR: Asia/Dubai
              zh_Hans: 亚洲/迪拜
            value: Asia/Dubai
          - label:
              en_US: Asia/Kolkata
              ja_JP: Asia/Kolkata
              pt_BR: Asia/Kolkata
              zh_Hans: 亚洲/加尔各答
            value: Asia/Kolkata
          - label:
              en_US: Asia/Seoul
              ja_JP: Asia/Seoul
              pt_BR: Asia/Seoul
              zh_Hans: 亚洲/首尔
            value: Asia/Seoul
          - label:
              en_US: Asia/Singapore
              ja_JP: Asia/Singapore
              pt_BR: Asia/Singapore
              zh_Hans: 亚洲/新加坡
            value: Asia/Singapore
          - label:
              en_US: Europe/London
              ja_JP: Europe/London
              pt_BR: Europe/London
              zh_Hans: 欧洲/伦敦
            value: Europe/London
          - label:
              en_US: Europe/Berlin
              ja_JP: Europe/Berlin
              pt_BR: Europe/Berlin
              zh_Hans: 欧洲/柏林
            value: Europe/Berlin
          - label:
              en_US: Europe/Moscow
              ja_JP: Europe/Moscow
              pt_BR: Europe/Moscow
              zh_Hans: 欧洲/莫斯科
            value: Europe/Moscow
          - label:
              en_US: Australia/Sydney
              ja_JP: Australia/Sydney
              pt_BR: Australia/Sydney
              zh_Hans: 澳大利亚/悉尼
            value: Australia/Sydney
          - label:
              en_US: Pacific/Auckland
              ja_JP: Pacific/Auckland
              pt_BR: Pacific/Auckland
              zh_Hans: 太平洋/奥克兰
            value: Pacific/Auckland
          - label:
              en_US: Africa/Cairo
              ja_JP: Africa/Cairo
              pt_BR: Africa/Cairo
              zh_Hans: 非洲/开罗
            value: Africa/Cairo
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          format: ''
          timezone: ''
        provider_id: time
        provider_name: time
        provider_type: builtin
        selected: false
        title: 获取当前时间
        tool_configurations:
          format:
            type: constant
            value: '%Y-%m-%d %H:%M:%S'
          timezone:
            type: constant
            value: Asia/Shanghai
        tool_description: 一个用于获取当前时间的工具。
        tool_label: 获取当前时间
        tool_name: current_time
        tool_node_version: '2'
        tool_parameters: {}
        type: tool
      height: 116
      id: '1754378598019'
      position:
        x: 2793
        y: 6914
      positionAbsolute:
        x: 2793
        y: 6914
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main() -> dict:\n    return {\n        \"result\": \"tables\"\
          \n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 添加关键词
        type: code
        variables: []
      height: 54
      id: '1754378692658'
      position:
        x: 3127
        y: 6944
      positionAbsolute:
        x: 3127
        y: 6944
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - 5SRegzflW1DVgYrdVvahebv2eJSUlglHV+ETbXMhYh8PWH/sEjbPBGDBmxintI3M
        desc: ''
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: weighted_score
          reranking_model:
            model: bge-reranker-base
            provider: langgenius/openai_api_compatible/openai_api_compatible
          top_k: 4
          weights:
            keyword_setting:
              keyword_weight: 0
            vector_setting:
              embedding_model_name: bge-m3
              embedding_provider_name: langgenius/openai_api_compatible/openai_api_compatible
              vector_weight: 1
        query_variable_selector:
        - '1754378692658'
        - result
        retrieval_mode: multiple
        selected: false
        title: 获取表结构
        type: knowledge-retrieval
      height: 92
      id: '1754378740963'
      position:
        x: 3461
        y: 6907
      positionAbsolute:
        x: 3461
        y: 6907
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: 2812881a-3c2b-4951-9088-1229cc8e45c7
            value: 机组
            varType: string
            variable_selector:
            - sys
            - query
          - comparison_operator: contains
            id: 5b53850a-92f2-4870-8187-37837288adaf
            value: 公用
            varType: string
            variable_selector:
            - sys
            - query
          - comparison_operator: contains
            id: 38064b1f-a5c2-4641-8080-351f6d92ce13
            value: 系统
            varType: string
            variable_selector:
            - sys
            - query
          id: 'true'
          logical_operator: or
        desc: ''
        selected: false
        title: 是否包含机组
        type: if-else
      height: 178
      id: '1754379039833'
      position:
        x: 3795
        y: 6960
      positionAbsolute:
        x: 3795
        y: 6960
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1754378740963'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 00096d27-4548-4a72-83bf-3da04d0354c1
          role: system
          text: "## 角色\n- 你是专业的文本内容理解与提取专家\n\n## 输入\n- 用户问题：{{#sys.query#}}\n- 表结构信息：{{#context#}}\n\
            \n## 机组名称识别规则\n- 机组同义描述：1机组、一机组、#1、1号机组、一号机组\n- 机组编号识别中不区分中文还是阿拉伯数字\n\
            - 包含“公用”的为公用机组。\n- 特例，包含“光伏系统”、“厂区风机系统”的为系统机组\n\n## 任务\n- 理解问题：仔细阅读并理解问题内容\n\
            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点\n- 输出判断结果：识别出用户问题中关于机组和系统的描述文字，然后再结合表结构信息分析，如果用户问题中提到某个字段需要包含问题中关于机组和系统的描述（典型的问法：工作票内容为xxxx、操作票内容是xxxx），则输出“是”，否则输出“否”\n\
            \n## 判定规则\n- 用户问题字面中提到某个字段需要包含问题中关于机组和系统的描述，（典型的问法：工作票内容为xxxx、操作票内容是xxxx、设备名称为xxxx）才输出“是”，而不是关于机组和系统的描述可能对应到某个字段内容。\n\
            \n## 约束\n- 仅输出“是”或者“否”，禁止输出其他内容\n- 根据字面描述判断，禁止延申发散推测\n\n## 示例\n- 判断为“是\"\
            的示例：\n   问题：操作票名称是“1号机组灰硫3.15kv-1B母线由运行转为检修”的操作记录\n   分析：用户问题提到了”操作票名称“字段要包含关于机组的描述：1号机组灰硫3.15kv-1B母线由运行转为检修\n\
            \   输出：是\n\n- 判断为“否\"的示例：\n   问题：6号机组2025年的操作票有哪些\n   分析：用户问题中关于机组的描述：6号机组，没有提到哪个字段要包含关于机组的描述\n\
            \   输出：否\n\n- 判断为“否\"的示例：\n   问题：7号机组有哪些进行中电气第一种票的工作票数据\n   分析：用户问题中关于机组的描述：7号机组，没有提到哪个字段要包含关于机组的描述\n\
            \   输出：否"
        selected: false
        title: 识别是否指定查询字段
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1754379124433'
      position:
        x: 4463
        y: 6811
      positionAbsolute:
        x: 4463
        y: 6811
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: end with
            id: 7cf30849-bac8-499f-b59b-34743d4cf34f
            value: 否
            varType: string
            variable_selector:
            - '1754379124433'
            - text
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 是否指定查询条件
        type: if-else
      height: 126
      id: '1754379212065'
      position:
        x: 4797
        y: 6819
      positionAbsolute:
        x: 4797
        y: 6819
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: cd3ca2d2-3fb3-42e4-8bab-8bd6da47850f
          role: system
          text: '## 角色

            - 你是专业的文本内容理解与提取专家


            ## 输入

            - 用户问题：{{#sys.query#}}


            ## 机组名称识别规则

            - 机组同义描述：1机组、一机组、#1、1号机组、一号机组

            - 机组编号识别中不区分中文还是阿拉伯数字

            - 包含“公用”的为公用机组。

            - 特例，包含“光伏系统”、“厂区风机系统”的为系统机组


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出内容：从用户问题中识别机组名称，并按格式输出。


            ## 输出格式

            - x号机组，示例：1号机组，多个用逗号隔开

            - 多个机组公用的，以#开头，示例：#1、2机组公用

            - 其他根据语义匹配：三期公用、全厂公用、光伏系统、厂区风机系统


            ## 约束

            - 仅输出机组名称，禁止输出其他内容，机组名称中不要包含换行符”\n"。'
        selected: false
        title: 机组识别
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1754379278448'
      position:
        x: 5465
        y: 6189.5
      positionAbsolute:
        x: 5465
        y: 6189.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n        text = text.replace(\"\
          \\n\",\"\")\n\n    return {\"result\": text,\"jizu\":\"jizu\"}\n"
        code_language: python3
        desc: ''
        outputs:
          jizu:
            children: null
            type: string
          result:
            children: null
            type: string
        selected: false
        title: 机组提取/检索变量
        type: code
        variables:
        - value_selector:
          - '1754379278448'
          - text
          variable: arg1
      height: 54
      id: '1754379335920'
      position:
        x: 5799
        y: 6218
      positionAbsolute:
        x: 5799
        y: 6218
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - qUedNXVQeKgVjYuPFmzRGQuZDwaq03Ny1P8L53NeclPax6xCJsUGtDCcKs1Gdget
        desc: ''
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: weighted_score
          reranking_model:
            model: bge-reranker-base
            provider: langgenius/openai_api_compatible/openai_api_compatible
          top_k: 4
          weights:
            keyword_setting:
              keyword_weight: 0
            vector_setting:
              embedding_model_name: bge-m3
              embedding_provider_name: langgenius/openai_api_compatible/openai_api_compatible
              vector_weight: 1
        query_variable_selector:
        - '1754379335920'
        - jizu
        retrieval_mode: multiple
        selected: false
        title: 机组编码检索
        type: knowledge-retrieval
      height: 92
      id: '1754379379424'
      position:
        x: 6133
        y: 6163
      positionAbsolute:
        x: 6133
        y: 6163
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    return {\n        \"result\": arg1\n\
          \    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: array[object]
        selected: false
        title: 暂存机组编码
        type: code
        variables:
        - value_selector:
          - '1754379379424'
          - result
          variable: arg1
      height: 54
      id: '1754379441680'
      position:
        x: 6467
        y: 6200
      positionAbsolute:
        x: 6467
        y: 6200
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 666c9b8c-b9ef-474a-a721-6a1bc6af5f70
          role: system
          text: '## 角色

            - 你是专业的文本内容理解与提取专家


            ## 输入

            - 用户问题：{{#sys.query#}}


            ## 机组名称识别规则

            - 机组同义描述：1机组、一机组、#1、1号机组、一号机组

            - 机组编号识别中不区分中文还是阿拉伯数字

            - 包含“公用”的为公用机组。

            - 特例，包含“光伏系统”、“厂区风机系统”的为系统机组


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出内容：从用户问题中识别机组名称，判断机组名称之后是否还有其他关于系统（有”系统“两个字）、设备名称的描述，如果没有，问题中只有关于机组的描述则输出：是，如果问题中还有除机组外的系统或者设备名称描述则输出：否。


            ## 约束

            - 仅输出是或否，禁止输出其他内容，机组名称中不要包含换行符”\n"。'
        selected: false
        title: 是否只包含机组
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1754379511368'
      position:
        x: 6801
        y: 6164
      positionAbsolute:
        x: 6801
        y: 6164
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    \n\n    result =\
          \ text.strip()\n    \n    \n    return {\"result\": result}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 提取是否只包含机组结果
        type: code
        variables:
        - value_selector:
          - '1754379511368'
          - text
          variable: arg1
      height: 54
      id: '1754379572304'
      position:
        x: 7135
        y: 6201
      positionAbsolute:
        x: 7135
        y: 6201
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: is
            id: c278d28c-f932-47b5-8a45-9ee8a4f0e113
            value: 是
            varType: string
            variable_selector:
            - '1754379572304'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 是否只包含机组判断
        type: if-else
      height: 126
      id: '1754379603431'
      position:
        x: 7469
        y: 6146
      positionAbsolute:
        x: 7469
        y: 6146
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1754378740963'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: b13621e9-de04-4119-8041-b34fd11ec08d
          role: system
          text: "## 角色\n- 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句\n\n## 输入\n-\
            \ 用户问题：{{#sys.query#}}\n- 机组编码：{{#1754379441680.result#}}\n- 机组名称：{{#1754379335920.result#}}\n\
            - 当前时间：{{#1754378598019.text#}}\n- 表结构信息：{{#context#}}\n\n## 任务\n- 理解问题：仔细阅读并理解问题内容\n\
            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点\n- 输出sql语句：根据用户问题中的关键信息和表结构信息及数据库数据样本生成sql语句。\n\
            \n## 约束\n- 务必遵守约束内容\n- 不可编造查询的字段\n- 明确使用的表（wo_ot 或 wo_wt）\n- 只查询知识库中描述的关于wo_ot\
            \ 或者wo_wt表的字段，不要涉及其他表的字段，禁止跨表混用字段，禁止用select *写法\n- 除时间和日期类型字段外，必须使用like关键字模糊搜索\n\
            - 必须根据机组名称从机组编码中匹配，如果匹配到，则匹配到的机组编码用equip_logic_id做前缀模糊匹配，并且从机组名称中取出阿拉伯数字编号（例如设备名称是”1号机组“，则取出：1），用取出的阿拉伯数字编号，对plant_unit字段进行匹配，并且不要使用用户问题中的机组名和系统名作条件批匹配查询，sql类似：where\
            \ equip_logic_id  like 'xxx1%' or plant_unit = ‘1’\n- 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和表结构信息，合理拆分出关键信息，分析出合理的查询条件字段。\n\
            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。\n\
            - 生成sql时已包含content字段或name字段，则禁止添加非事件类的其他任何字段作为查询条件\n- 所有内容类字段（如 content\
            \ / name）统一用 LIKE '%关键词%' 模糊匹配\n- 禁止跨表混用字段（操作票字段不能用于工作票查询）\n- 若用户问题未明确指定查询的时间字段，则【工作票】查询使用计划开始时间(plan_start_time)字段作为查询条件，【操作票】查询使用创建时间(create_date)字段作为查询条件\n\
            - sql务必使用标准的sql语法，语法必须符合postgresql数据库\n- 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,'YYYY-MM-DD')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date\n\
            - 只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号\"\\n\"等\n- 当用户问题没有提到查询某个状态的数据时，工作票默认过滤掉状态为“1：登记”、“44：已删除”、“17：作废”的记录，操作票默认过滤掉状态为“1：操作建立”、“6：删除”、“70：作废”的记录。\n\
            - 除了仅关于次数统计的问题，不要在sql中使用cout()\n- 限制最多查询50条数据\n- 字典类的字段在sql查询的时候用对应的数值\n\
            \n## SQL生成策略\n- 当用户未明确字段判断使用 wo_ot 或 wo_wt 表时，若包含\"发令\"、\"监护\"、\"操作\"\
            等，优先使用操作票；若包含\"许可\"、\"负责人\"、\"开工\"等，优先使用工作票。\n- 当用户未明确查询条件字段时，优先匹配以下字段：\n\
            \  操作票（wo_ot）：name、equip_logic_name、starter_name、inspect_by_name、status、create_date\n\
            \  工作票（wo_wt）：content、equip_logic_name、work_leader_name、wt_signer_name、status、plan_start_time\n\
            - 某些字段如 工作票的content字段和操作票的name字段，其值常为文本类型，用于记录任务、动作、状态等信息，常见于工作类或操作类表中\n\
            - 当用户问题中未明确指出字段名，仅提供描述性内容时，应根据以下特征判断是否匹配这些字段；\n    1.若用户问题中包含完整的操作或任务描述，则该内容极可能来自\
            \ `content` 或 `name` 字段，应将其作为查询字段，例如：\n      某设备 + 某编号 + 某行为/状态（如\"6号机组小机6B主汽门试验\"\
            ）\n      某地段/位置 + 操作/处理（如\"锅炉房监控箱拆除\"）\n      动作动词 + 对象名词的组合（如\"转为冷备用\"\
            、\"活动性试验\"）\n\t2.字段选择建议\n      若描述偏向计划、任务、工单、工作流程 → 优先尝试匹配 `content`\n\
            \      若描述偏向执行、控制、动作、记录 → 优先尝试匹配 `name`\n    3.匹配策略要求\n\t  内容为完整短语（不拆词）：不要断句或关键词单独匹配\n\
            \      保留编号、单位、标识符（如\"6A\"、\"3.15kV\" 等），避免模型简化或误删\n      若同一内容可归属多个字段，应优先考虑记录行为/过程的字段\n\
            \n## 进行中状态说明\n- 工作票：status字段值为'6'、'7'、'9'、'10'、'11'、'13'、'14'、'15'、'16'、'39'、'40'、'41'的都属于进行中\n\
            - 操作票：status字段值为'4'的都属于进行中\n\n## 默认查询字段\n当用户问题未明确查询返回字段时，查询以下字段：\n【操作票（wo_ot）】\n\
            code, name, start_time, end_time, status, equip_logic_name, equip_logic_id,\
            \ starter_name, inspect_by_name, create_date，spec_id\n\n【工作票（wo_wt）】\n\
            wt_code, wt_type, content, status, work_leader_name, plan_start_time,\
            \ plan_end_time, wt_signer_name, permit_by_name, equip_logic_id, equip_logic_name,\
            \ create_date，spec_id\n\n## 问题与生成SQL示例\n-【正确示例】\n  用户提问：\"3号机组小机系统鼓风机最近一周的操作票内容？\"\
            \n  正确生成：select name from wo_ot where 1=1 and equip_logic_id  like '377850MAJ%'\
            \ and  equip_logic_name  like '%鼓风机%' and to_char(create_date, 'YYYY-MM-DD')\
            \ >= '2025-07-01' and to_char(create_date, 'YYYY-MM-DD') <= '2025-07-07';\n\
            -【正确示例】\n  用户提问：\"7号机组有哪些开工中的工作电气第一种票？\"\n  正确生成：select content, wt_code,\
            \ status, wt_type, wt_typex, plan_start_time, plan_end_time from wo_wt\
            \ where 1=1 and equip_logic_id  like ('37781%' or plant_unit = '7') and\
            \ status = '6' and wt_type = '1';\n\n## 字段示例值\n-【equip_logic_name】: \"\
            三号机组\"、\"3号机组\"\n-【content】:  \n  5号机组锅炉房监控箱及摄像头支架安装动火工作  \n  7号机主密封油泵7A/7B泵体安全阀后增装隔离阀\
            \  \n  6号炉燃油系统管道附件检修  \n-【name】:  \n  6号机组工频备用闭式水泵6A定期试转  \n  7号机组小机7B高低压主汽门活动性试验\
            \  \n  3.15kV开关由热备用转为冷备用"
        selected: false
        title: 生成两票SQL1
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1754379657992'
      position:
        x: 9473
        y: 6182
      positionAbsolute:
        x: 9473
        y: 6182
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 提取两票SQL1
        type: code
        variables:
        - value_selector:
          - '1754379657992'
          - text
          variable: arg1
      height: 54
      id: '1754379719919'
      position:
        x: 9807
        y: 6182
      positionAbsolute:
        x: 9807
        y: 6182
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1754378740963'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: d47f8dbe-5513-412a-9375-5bdb1ace6ab6
          role: system
          text: '## 角色

            - 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句


            ## 输入

            - 用户的问题：{{#sys.query#}}

            - 表结构信息：{{#context#}}

            - 机组编码：{{#1754379441680.result#}}

            - 问题中的机组名：{{#1754379335920.result#}}

            - 当前时间：{{#1754378598019.text#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 输出sql语句：根据用户问题中的关键信息和em_equip_logic表结构信息生成查询em_equip_logic表的sql语句。


            ## SQL编写步骤

            -首先，如果用户问题中包含“机组”，根据问题中的机组名从机组编码中匹配机组编码，用每个机组编码对id做前缀匹配。类似：select id from
            em_equip_logic where id like ''xx%'' or id like ''xxx%''，再根据用户问题中“机组”一词之后的语句拆分出关键信息，结合em_equip_logic表的相应字段，分析出合理的查询条件字段。通常用户问题中的信息是关于设备名称的描述，优先分析考虑是否该用设备名称字段做查询条件。类似：kks_descr
            like ''%一次风机1A%''.

            - 如果用户问题中不包含“机组”，则直接根据用户问题拆分出关键信息，结合em_equip_logic表的相应字段，分析出合理的查询条件字段。通常用户问题中的信息是关于设备名称的描述，优先分析考虑是否该用设备名称字段做查询条件。类似：kks_descr
            like ''%一次风机1A%''

            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。


            ## 约束

            - 务必遵守约束内容

            - 不可编造查询的字段

            - 限定只查询em_equip_logic表，不查询其他表，如：select id from em_equip_logic

            - 只查询知识库中描述的关于em_equip_logic表的字段，不要涉及其他表的字段，禁止跨表混用字段，不要用select *写法

            - 除时间和日期类型字段外，必须使用like关键字模糊搜索

            - sql务必使用标准的sql语法，语法必须符合postgresql数据库

            - 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,''YYYY-MM-DD'')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date

            - 只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号"\n"等

            - 除了仅关于次数统计的问题，不要在sql中使用cout()

            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和em_equip_logic表结构信息，合理拆分出关键信息，分析出合理的查询条件字段。

            - 限制最多查询50条数据


            ## 示例

            - 用户问题：1机组鼓风机系统的工作票有哪些？

            - 分析机组：“1机组”，where id like ''37781%''

            - 分析除机组外的系统或者具体设备信息：“鼓风机系统”，where kks_descr like ''%鼓风机系统%''

            - 最终SQL：select id from em_equip_logic where id like ''37781%'' and kks_descr
            like ''%鼓风机系统%''.

            '
        selected: false
        title: 生成设备SQL
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1754379899774'
      position:
        x: 8471
        y: 6522
      positionAbsolute:
        x: 8471
        y: 6522
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 提取设备SQL
        type: code
        variables:
        - value_selector:
          - '1754379899774'
          - text
          variable: arg1
      height: 54
      id: '1754379960949'
      position:
        x: 8805
        y: 6523
      positionAbsolute:
        x: 8805
        y: 6523
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 查询设备表
        tool_configurations:
          db_name:
            type: constant
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: cbform
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          sql:
            type: mixed
            value: '{{#1754379960949.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17543800353070'
      position:
        x: 9139
        y: 6390
      positionAbsolute:
        x: 9139
        y: 6390
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1754378740963'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: f89eac02-d576-4063-b5ad-0e743198660f
          role: system
          text: "## 角色\n- 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句\n\n## 输入\n-\
            \ 用户问题：{{#sys.query#}}\n- 设备编码：{{#17543800353070.text#}}\n- 机组名称：{{#1754379335920.result#}}\n\
            - 当前时间：{{#1754378598019.text#}}\n- 表结构信息：{{#context#}}\n\n## 任务\n- 理解问题：仔细阅读并理解问题内容\n\
            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点\n- 输出sql语句：根据用户问题中的关键信息和表结构信息及数据库数据样本生成sql语句。\n\
            \n## 约束\n- 务必遵守约束内容\n- 不可编造查询的字段\n- 明确使用的表（wo_ot 或 wo_wt）\n- 只查询知识库中描述的关于wo_ot\
            \ 或者wo_wt表的字段，不要涉及其他表的字段，禁止跨表混用字段，禁止用select *写法\n- 除时间和日期类型字段外，必须使用like关键字模糊搜索\n\
            - 首先从输入的设备编码中提取id，如果提取到，则用每个id对equip_logic_id做前缀模糊匹配，类似：where equip_logic_id\
            \  like 'xxx1%'  (多个用or连接 or equip_logic_id  like 'xxx2%'），并且不再用用户问题中的机组名和系统名作条件查询！\n\
            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和表结构信息，合理拆分出关键信息（除机组、系统、设备名外的信息，因为这些信息在上一步中处理过），分析出合理的查询条件字段（禁止猜测）。\n\
            - 严格遵循查询条件字段连接规则：首先使用where 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。\n\
            - 生成sql时已包含content字段或name字段，则禁止添加非事件类的其他任何字段作为查询条件\n- 所有内容类字段（如 content\
            \ / name）统一用 LIKE '%关键词%' 模糊匹配\n- 禁止跨表混用字段（操作票字段不能用于工作票查询）\n- 若用户问题未明确指定查询的时间字段，则【工作票】查询使用计划开始时间(plan_start_time)字段作为查询条件，【操作票】查询使用创建时间(create_date)字段作为查询条件\n\
            - sql务必使用标准的sql语法，语法必须符合postgresql数据库\n- 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,'YYYY-MM-DD')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date\n\
            - 只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号\"\\n\"等\n- 当用户问题没有提到查询某个状态的数据时，工作票默认过滤掉状态为“1：登记”、“44：已删除”、“17：作废”的记录，操作票默认过滤掉状态为“1：操作建立”、“6：删除”、“70：作废”的记录。\n\
            - 除了仅关于次数统计的问题，不要在sql中使用cout()\n- 限制最多查询50条数据\n- 字典类的字段在sql查询的时候用对应的数值\n\
            \n## SQL生成策略\n- 当用户未明确字段判断使用 wo_ot 或 wo_wt 表时，若包含\"发令\"、\"监护\"、\"操作\"\
            等，优先使用操作票；若包含\"许可\"、\"负责人\"、\"开工\"等，优先使用工作票。\n- 当用户未明确查询条件字段时，优先匹配以下字段：\n\
            \  操作票（wo_ot）：name、equip_logic_name、starter_name、inspect_by_name、status、create_date\n\
            \  工作票（wo_wt）：content、equip_logic_name、work_leader_name、wt_signer_name、status、plan_start_time\n\
            - 某些字段如 工作票的content字段和操作票的name字段，其值常为文本类型，用于记录任务、动作、状态等信息，常见于工作类或操作类表中\n\
            - 当用户问题中未明确指出字段名，仅提供描述性内容时，应根据以下特征判断是否匹配这些字段；\n    1.若用户问题中包含完整的操作或任务描述，则该内容极可能来自\
            \ `content` 或 `name` 字段，应将其作为查询字段，例如：\n      某设备 + 某编号 + 某行为/状态（如\"6号机组小机6B主汽门试验\"\
            ）\n      某地段/位置 + 操作/处理（如\"锅炉房监控箱拆除\"）\n      动作动词 + 对象名词的组合（如\"转为冷备用\"\
            、\"活动性试验\"）\n\t2.字段选择建议\n      若描述偏向计划、任务、工单、工作流程 → 优先尝试匹配 `content`\n\
            \      若描述偏向执行、控制、动作、记录 → 优先尝试匹配 `name`\n    3.匹配策略要求\n\t  内容为完整短语（不拆词）：不要断句或关键词单独匹配\n\
            \      保留编号、单位、标识符（如\"6A\"、\"3.15kV\" 等），避免模型简化或误删\n      若同一内容可归属多个字段，应优先考虑记录行为/过程的字段\n\
            \n## 进行中状态说明\n- 工作票：status字段值为'6'、'7'、'9'、'10'、'11'、'13'、'14'、'15'、'16'、'39'、'40'、'41'的都属于进行中\n\
            - 操作票：status字段值为'4'的都属于进行中\n\n## 默认查询字段\n当用户问题未明确查询返回字段时，查询以下字段：\n【操作票（wo_ot）】\n\
            code, name, start_time, end_time, status, equip_logic_name, equip_logic_id,\
            \ starter_name, inspect_by_name, create_date，spec_id\n\n【工作票（wo_wt）】\n\
            wt_code, wt_type, content, status, work_leader_name, plan_start_time,\
            \ plan_end_time, wt_signer_name, permit_by_name, equip_logic_id, equip_logic_name,\
            \ create_date，spec_id\n\n## 问题与生成SQL示例\n-【正确示例】\n  用户提问：\"3号机组小机系统鼓风机最近一周的操作票内容？\"\
            \n正确生成：select name from wo_ot where 1=1 and equip_logic_id  like '377850MAJ%'\
            \ and  equip_logic_name  like '%鼓风机%' and to_char(create_date, 'YYYY-MM-DD')\
            \ >= '2025-07-01' and to_char(create_date, 'YYYY-MM-DD') <= '2025-07-07';\n\
            -【正确示例】\n\n## 字段示例值\n-【equip_logic_name】: \"三号机组\"、\"3号机组\"\n-【content】:\
            \  \n  5号机组锅炉房监控箱及摄像头支架安装动火工作  \n  7号机主密封油泵7A/7B泵体安全阀后增装隔离阀  \n  6号炉燃油系统管道附件检修\
            \  \n-【name】:  \n  6号机组工频备用闭式水泵6A定期试转  \n  7号机组小机7B高低压主汽门活动性试验  \n  3.15kV开关由热备用转为冷备用"
        selected: false
        title: 生成两票SQL2
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1754380148197'
      position:
        x: 9473
        y: 6504
      positionAbsolute:
        x: 9473
        y: 6504
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 提取两票SQL2
        type: code
        variables:
        - value_selector:
          - '1754380148197'
          - text
          variable: arg1
      height: 54
      id: '1754380250676'
      position:
        x: 9807
        y: 6504
      positionAbsolute:
        x: 9807
        y: 6504
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        output_type: array[object]
        selected: false
        title: 变量聚合器
        type: variable-aggregator
        variables:
        - - '17549970221300'
          - json
        - - '17549970763540'
          - json
        - - '17549971451780'
          - json
      height: 152
      id: '1754380333461'
      position:
        x: 10809
        y: 6491
      positionAbsolute:
        x: 10809
        y: 6491
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1754378740963'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: d47f8dbe-5513-412a-9375-5bdb1ace6ab6
          role: system
          text: "## 角色\n- 你是一位精通sql语言的数据库专家，擅长根据自然语言生成纯净的可以直接执行的sql语句\n\n## 输入\n-\
            \ 用户问题：{{#sys.query#}}\n- 当前时间：{{#1754378598019.text#}}\n- 表结构信息：{{#context#}}\n\
            \n## 任务\n- 理解问题：仔细阅读并理解问题内容\n- 提炼核心：从问题中提取关键信息，确定问题的主要关注点\n- 输出sql语句：根据用户问题中的关键信息和表结构信息及数据库数据样本生成sql语句。\n\
            \n## 约束\n- 分析用户问题结合表结构信息，合理地查询部分字段，禁止用select * 写法\n- 不可编造查询的字段\n- 明确使用的表（wo_ot\
            \ 或 wo_wt）\n- 只查询知识库中描述的关于wo_ot 或者wo_wt表的字段，不要涉及其他表的字段，禁止跨表混用字段\n- 除时间和日期类型字段外，必须使用like关键字模糊搜索\n\
            - 禁止将理应连贯的信息多次拆分，必须分析用户问题，根据语法结构、语义内容和表结构信息，合理拆分出关键信息，分析出合理的查询条件字段。\n\
            - 如果用户问题中提到某个字段需要包含某个内容时，不用作同义转换和过度拆分，按原文内容匹配。\n- 严格遵循查询条件字段连接规则：首先使用where\
            \ 1=1，如果分析出的确定性查询条件字段则用and连接，如果分析出是可能的查询条件字段则用or连接，如果同一字段要出现多次不同值匹配，则同一字段间用and连接。\n\
            - 生成sql时已包含content字段或name字段，则禁止添加非事件类的其他任何字段作为查询条件\n- 所有内容类字段（如 content\
            \ / name）统一用 LIKE '%关键词%' 模糊匹配\n- 禁止跨表混用字段（操作票字段不能用于工作票查询）\n- 若用户问题提到查询某段时间内的数据，并且未明确指定查询的时间字段，则【工作票】查询使用计划开始时间(plan_start_time)字段作为查询条件，【操作票】查询使用创建时间(create_date)字段作为查询条件\n\
            - sql务必使用标准的sql语法，语法必须符合postgresql数据库\n- 对于今天、昨天、去年等相对时间描述，要基于当前时间进行推断，对timestamp类型的字段应用to_char函数，如to_char(change_date,'YYYY-MM-DD')；对应最近一周，最近10天等返回类的，用时间范围查询。涉及到时间字段的查询条件，禁止使用current_date\n\
            - 只输出SOL语句，不要输出其他内容，SQL语句中不要包含SQL语法之外的其他字符，如换行符号\"\\n\"等\n- 当用户问题没有提到查询某个状态的数据时，工作票默认过滤掉状态为“1：登记”、“44：已删除”、“17：作废”的记录，操作票默认过滤掉状态为“1：操作建立”、“6：删除”、“70：作废”的记录。\n\
            - 除了仅关于次数统计的问题，不要在sql中使用cout()\n- 限制最多查询50条数据\n- 字典类的字段在sql查询的时候用对应的数值\n\
            \n## SQL生成策略\n- 当用户未明确字段判断使用 wo_ot 或 wo_wt 表时，若包含\"发令\"、\"监护\"、\"操作\"\
            等，优先使用操作票；若包含\"许可\"、\"负责人\"、\"开工\"等，优先使用工作票。\n- 当用户未明确查询条件字段时，优先匹配以下字段：\n\
            \  操作票（wo_ot）：name、equip_logic_name、starter_name、inspect_by_name、status、create_date\n\
            \  工作票（wo_wt）：content、equip_logic_name、work_leader_name、wt_signer_name、status、plan_start_time\n\
            - 某些字段如 工作票的content字段和操作票的name字段，其值常为文本类型，用于记录任务、动作、状态等信息，常见于工作类或操作类表中\n\
            - 当用户问题中未明确指出字段名，仅提供描述性内容时，应根据以下特征判断是否匹配这些字段；\n    1.若用户问题中包含完整的操作或任务描述，则该内容极可能来自\
            \ `content` 或 `name` 字段，应将其作为查询字段，例如：\n      某设备 + 某编号 + 某行为/状态（如\"6号机组小机6B主汽门试验\"\
            ）\n      某地段/位置 + 操作/处理（如\"锅炉房监控箱拆除\"）\n      动作动词 + 对象名词的组合（如\"转为冷备用\"\
            、\"活动性试验\"）\n\t2.字段选择建议\n      若描述偏向计划、任务、工单、工作流程 → 优先尝试匹配 `content`\n\
            \      若描述偏向执行、控制、动作、记录 → 优先尝试匹配 `name`\n    3.匹配策略要求\n\t  内容为完整短语（不拆词）：不要断句或关键词单独匹配\n\
            \      保留编号、单位、标识符（如\"6A\"、\"3.15kV\" 等），避免模型简化或误删\n      若同一内容可归属多个字段，应优先考虑记录行为/过程的字段\n\
            \n## 进行中状态说明\n- 工作票：status字段值为'6'、'7'、'9'、'10'、'11'、'13'、'14'、'15'、'16'、'39'、'40'、'41'的都属于进行中\n\
            - 操作票：status字段值为'4'的都属于进行中\n\n## 默认查询字段\n当用户问题未明确查询返回字段时，查询以下字段：\n【操作票（wo_ot）】\n\
            code, name, start_time, end_time, status, equip_logic_name, equip_logic_id,\
            \ starter_name, inspect_by_name, create_date，spec_id\n\n【工作票（wo_wt）】\n\
            wt_code, wt_type, content, status, work_leader_name, plan_start_time,\
            \ plan_end_time, wt_signer_name, permit_by_name, equip_logic_id, equip_logic_name,\
            \ create_date，spec_id\n\n## 问题与生成SQL示例\n-【正确示例】\n  用户提问：\"设备名称为3号机组小机系统最近一周的操作票内容？\"\
            \n  正确生成：select name from wo_ot where 1=1 and equip_logic_name like '%3号机组小机系统%'\
            \  and to_char(create_date, 'YYYY-MM-DD') >= '2025-07-01' and to_char(create_date,\
            \ 'YYYY-MM-DD') <= '2025-07-07';\n\n## 字段示例值\n-【equip_logic_name】: \"\
            三号机组\"、\"3号机组\"\n-【content】:  \n  5号机组锅炉房监控箱及摄像头支架安装动火工作  \n  7号机主密封油泵7A/7B泵体安全阀后增装隔离阀\
            \  \n  6号炉燃油系统管道附件检修  \n-【name】:  \n  6号机组工频备用闭式水泵6A定期试转  \n  7号机组小机7B高低压主汽门活动性试验\
            \  \n  3.15kV开关由热备用转为冷备用"
        selected: false
        title: 生成两票SQL3
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '17543804361460'
      position:
        x: 9473
        y: 6826
      positionAbsolute:
        x: 9473
        y: 6826
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: str) -> dict:\n    try:\n        payload\
          \ = json.loads(arg1)\n        text = payload.get(\"text\",\"\")\n    except\
          \ json.JSONDecodeError:\n        text = arg1\n\n    if \"</think>\" in text:\n\
          \        text = text.split(\"</think>\", 1)[-1]\n\n    pos = text.lower().find(\"\
          select\")\n    if pos == -1:\n        return {\"result\": \"\"}\n\n    sql\
          \ = text[pos:].strip()\n    \n    \n    return {\"result\": sql}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 提取两票SQL3
        type: code
        variables:
        - value_selector:
          - '17543804361460'
          - text
          variable: arg1
      height: 54
      id: '1754380544396'
      position:
        x: 9807
        y: 6826
      positionAbsolute:
        x: 9807
        y: 6826
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: list) -> dict:\n    return {\n        \"result\":\
          \ len(str(arg1))\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: number
        selected: false
        title: 计算长度
        type: code
        variables:
        - value_selector:
          - '1754380333461'
          - output
          variable: arg1
      height: 54
      id: '1754380640892'
      position:
        x: 11477
        y: 6536
      positionAbsolute:
        x: 11477
        y: 6536
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: ≤
            id: fa707205-db37-4936-af01-b09f2457e748
            value: '20000'
            varType: number
            variable_selector:
            - '1754380640892'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 长度判断
        type: if-else
      height: 126
      id: '1754380683107'
      position:
        x: 11811
        y: 6486
      positionAbsolute:
        x: 11811
        y: 6486
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1754894019944'
          - output
        desc: ''
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: e5525292-d11c-434e-88e3-4771412771a4
          role: system
          text: '## 角色

            - 你是一位专业的数据分析与文本表达专家，擅长将 SQL 查询结果转化为清晰、专业、结构良好的内容。


            ## 输入

            - 用户的问题：{{#sys.query#}}

            - SQL查询结果：{{#1754380333461.output#}}

            - 表结构说明：{{#context#}}


            ## 任务

            - 理解问题：仔细阅读并理解问题内容

            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点

            - 内容转义：如果遇到存在枚举值的字段，仅展示中文值，除字段内容翻译和格式化以外，严禁对SQL查询结果进行任何条件过滤和改写

            - 输出回答：根据用户问题，并结合表结构输出，语言要专业、高效、精准、严谨、逻辑清晰，不要输出任何建议相关内容


            ## 约束

            - 禁止编造假数据

            - 严禁对SQL查询结果数据进行任何过滤和删除

            - 如未查询到数据，则输出“未查询到相关数据”

            - 将字段名翻译为中文含义（结合字段注释） 如 `equip_logic_name` → “设备名称”，`create_date` → “创建时间”

            - 如果当前查询命中了默认字段（如未在用户问题中指定字段），请在开头加一句提示： 根据设备名称、负责人等默认字段信息初步筛选，查询结果如下：

            - 禁止输出任何英文字段名称

            - 如数据值中包含"null"，则替换为空字符串''''，不要输出包含"null"的内容

            - 不要输出思考过程

            - 禁止输出表结构、表字段信息

            - 禁止对SQL查询结果进行任何过滤

            - 仅允许对数据进行字段内容翻译和格式化，禁止编造改写原数据内容

            - 数据中的工作票类型、工作票状态、操作票类型、操作票状态、操作票类别、工作票专业字段如果不是中文则需按照工作票类型、工作票状态、操作票类型、操作票状态、操作票类别对照表转换成中文

            - 工作票数据中，工作票类型如果是数字则需按照工作票类型对照表转换成中文，工作票状态如果是数字则需按照工作票状态对照表转换成中文，如果工作票专业是数字则需按照工作票专业对照表转换成中文

            - 操作票数据中，如果操作票类型是数字则需按照操作票类型对照表转换成中文，如果操作票状态是数字则需按照操作票状态对照表转换成中文，如果操作票类别是数字则需按照操作票类别对照表转换成中文

            - 禁止对查询结果进行统计


            ## 格式

            - 进行结构化分层，使用多级标题组织内容

            - 将结果中的数据转换为表格展示，并且添加序号列

            - 在结尾加上备注：为保证数据加载速度和可读性，系统默认展示前50条匹配结果'
        selected: false
        title: 两票总结
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1754380725963'
      position:
        x: 12479
        y: 6372.5
      positionAbsolute:
        x: 12479
        y: 6372.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '{{#1754380725963.text#}}'
        desc: ''
        selected: false
        title: 两票回复
        type: answer
        variables: []
      height: 105
      id: '1754380787043'
      position:
        x: 12813
        y: 6372.5
      positionAbsolute:
        x: 12813
        y: 6372.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: 根据您的问题，答案信息过多，不便阅读，请详细描述问题内容，重新提问！
        desc: ''
        selected: false
        title: 两票超长回复
        type: answer
        variables: []
      height: 118
      id: '1754380829611'
      position:
        x: 12813
        y: 6517.5
      positionAbsolute:
        x: 12813
        y: 6517.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 430017d7-f26f-4785-a62d-c50bad051a4c
          role: system
          text: "## 角色\n- 你是专业的文本内容理解与提取专家\n\n## 输入\n- 用户问题：{{#sys.query#}}\n- 表结构信息：{{#context#}}\n\
            \n## 机组名称识别规则\n- 机组同义描述：1机组、一机组、#1、1号机组、一号机组\n- 机组编号识别中不区分中文还是阿拉伯数字\n\
            - 包含“公用”的为公用机组。\n- 特例，包含“光伏系统”、“厂区风机系统”的为系统机组\n\n## 任务\n- 理解问题：仔细阅读并理解问题内容\n\
            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点\n- 输出判断结果：识别出用户问题中关于机组和系统的描述文字，然后再结合表结构信息分析，如果用户问题中提到某个字段需要包含问题中关于机组和系统的描述，则输出“是”，否则输出“否”\n\
            \n## 判定规则\n- 用户问题字面中提到某个字段需要包含问题中关于机组和系统的描述，才输出“是”，而不是关于机组和系统的描述可能对应到某个字段内容。\n\
            \n## 约束\n- 仅输出“是”或者“否”，禁止输出其他内容\n- 根据字面描述判断，禁止延申发散推测\n\n## 示例\n- 判断为“是\"\
            的示例：\n   问题：检修情况为“1号机组灰硫3.15kv-1B母线老化排查”的操检修记录\n   分析：用户问题提到了”检修情况“字段要包含关于机组的描述：1号机组灰硫3.15kv-1B母线老化排查\n\
            \   输出：是\n\n- 判断为“否\"的示例：\n   问题：6号机组2025年的检修记录有哪些\n   分析：用户问题中关于机组的描述：6号机组，没有提到哪个字段要包含关于机组的描述\n\
            \   输出：否"
        selected: false
        title: 识别是否指定查询字段LLM
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1754387577506'
      position:
        x: 4797
        y: 3400
      positionAbsolute:
        x: 4797
        y: 3400
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: end with
            id: 3f2cc329-b814-4701-aba2-a8d77c1eb34f
            value: 否
            varType: string
            variable_selector:
            - '1754387577506'
            - text
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 是否指定查询条件
        type: if-else
      height: 126
      id: '1754387726217'
      position:
        x: 5131
        y: 3338
      positionAbsolute:
        x: 5131
        y: 3338
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 8c7d4a61-3441-4b69-8972-9fc9e645ee17
          role: system
          text: "## 角色\n- 你是专业的文本内容理解与提取专家\n\n## 输入\n- 用户问题：{{#sys.query#}}\n- 表结构信息：{{#context#}}\n\
            \n## 机组名称识别规则\n- 机组同义描述：1机组、一机组、#1、1号机组、一号机组\n- 机组编号识别中不区分中文还是阿拉伯数字\n\
            - 包含“公用”的为公用机组。\n- 特例，包含“光伏系统”、“厂区风机系统”的为系统机组\n\n## 任务\n- 理解问题：仔细阅读并理解问题内容\n\
            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点\n- 输出判断结果：识别出用户问题中关于机组和系统的描述文字，然后再结合表结构信息分析，如果用户问题中提到某个字段需要包含问题中关于机组和系统的描述，则输出“是”，否则输出“否”\n\
            \n## 判定规则\n- 用户问题字面中提到某个字段需要包含问题中关于机组和系统的描述，才输出“是”，而不是关于机组和系统的描述可能对应到某个字段内容。\n\
            \n## 约束\n- 仅输出“是”或者“否”，禁止输出其他内容\n- 根据字面描述判断，禁止延申发散推测\n\n## 示例\n- 判断为“是\"\
            的示例：\n   问题：缺陷内容为1号机组鼓风机振动超标的缺陷详情\n   分析：用户问题提到了”缺陷内容“字段要包含关于机组的描述：1号机组鼓风机振动超标\n\
            \   输出：是\n\n- 判断为“否\"的示例：\n   问题：3号机组2025年的缺陷记录有哪些\n   分析：用户问题中关于机组的描述：3号机组，没有提到哪个字段要包含关于机组的描述\n\
            \   输出：否"
        selected: false
        title: 识别是否指定查询字段LLM (1)
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1754387825065'
      position:
        x: 4797
        y: 5668
      positionAbsolute:
        x: 4797
        y: 5668
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: end with
            id: 2c626463-73db-4219-831e-a6ee32e37368
            value: 否
            varType: string
            variable_selector:
            - '1754387825065'
            - text
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 是否指定查询条件（1）
        type: if-else
      height: 126
      id: '1754387879569'
      position:
        x: 5131
        y: 5606
      positionAbsolute:
        x: 5131
        y: 5606
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 176d591b-511e-41c3-a475-aa265f92b845
          role: system
          text: "## 角色\n- 你是专业的文本内容理解与提取专家\n\n## 输入\n- 用户问题：{{#sys.query#}}\n- 表结构信息：{{#context#}}\n\
            \n## 机组名称识别规则\n- 机组同义描述：1机组、一机组、#1、1号机组、一号机组\n- 机组编号识别中不区分中文还是阿拉伯数字\n\
            - 包含“公用”的为公用机组。\n- 特例，包含“光伏系统”、“厂区风机系统”的为系统机组\n\n## 任务\n- 理解问题：仔细阅读并理解问题内容\n\
            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点\n- 输出判断结果：识别出用户问题中关于机组和系统的描述文字，然后再结合表结构信息分析，如果用户问题中提到某个字段需要包含问题中关于机组和系统的描述，则输出“是”，否则输出“否”\n\
            \n## 判定规则\n- 用户问题字面中提到某个字段需要包含问题中关于机组和系统的描述，才输出“是”，而不是关于机组和系统的描述可能对应到某个字段内容。\n\
            \n## 约束\n- 仅输出“是”或者“否”，禁止输出其他内容\n- 根据字面描述判断，禁止延申发散推测\n\n## 示例\n- 判断为“是\"\
            的示例：\n   问题：设备名称为“1号机组灰硫3.15kv-1B母线”的设备详情\n   分析：用户问题提到了”设备名称“字段要包含关于机组的描述：1号机组灰硫3.15kv-1B母线\n\
            \   输出：是\n\n- 判断为“否\"的示例：\n   问题：6号机组的设备有哪些\n   分析：用户问题中关于机组的描述：6号机组，没有提到哪个字段要包含关于机组的描述\n\
            \   输出：否"
        selected: false
        title: 识别是否指定查询字段LLM (2)
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1754442733775'
      position:
        x: 5465
        y: 2229.5
      positionAbsolute:
        x: 5465
        y: 2229.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: end with
            id: 193819f6-5bbd-41b0-b02c-d8d2b04394e8
            value: 否
            varType: string
            variable_selector:
            - '1754442733775'
            - text
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 是否指定查询条件（2）
        type: if-else
      height: 126
      id: '1754442874394'
      position:
        x: 5799
        y: 2222
      positionAbsolute:
        x: 5799
        y: 2222
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1752047006319'
          - result
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: Qwen3-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 2a8fd884-f1f5-4dfd-a124-7b07bbb70f7a
          role: system
          text: "## 角色\n- 你是专业的文本内容理解与提取专家\n\n## 输入\n- 用户问题：{{#sys.query#}}\n- 表结构信息：{{#context#}}\n\
            \n## 机组名称识别规则\n- 机组同义描述：1机组、一机组、#1、1号机组、一号机组\n- 机组编号识别中不区分中文还是阿拉伯数字\n\
            - 包含“公用”的为公用机组。\n- 特例，包含“光伏系统”、“厂区风机系统”的为系统机组\n\n## 任务\n- 理解问题：仔细阅读并理解问题内容\n\
            - 提炼核心：从问题中提取关键信息，确定问题的主要关注点\n- 输出判断结果：识别出用户问题中关于机组和系统的描述文字，然后再结合表结构信息分析，如果用户问题中提到某个字段需要包含问题中关于机组和系统的描述，则输出“是”，否则输出“否”\n\
            \n## 判定规则\n- 用户问题字面中提到某个字段需要包含问题中关于机组和系统的描述，才输出“是”，而不是关于机组和系统的描述可能对应到某个字段内容。\n\
            \n## 约束\n- 仅输出“是”或者“否”，禁止输出其他内容\n- 根据字面描述判断，禁止延申发散推测\n\n## 示例\n- 判断为“是\"\
            的示例：\n   问题：设备名称为1号机组鼓风机的更换记录\n   分析：用户问题提到了”设备名称“字段要包含关于机组的描述：1号机组鼓风机\n\
            \   输出：是\n\n- 判断为“否\"的示例：\n   问题：3号机组2025年的更换记录有哪些\n   分析：用户问题中关于机组的描述：3号机组，没有提到哪个字段要包含关于机组的描述\n\
            \   输出：否"
        selected: false
        title: 识别是否指定查询字段LLM (3)
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1754444128338'
      position:
        x: 4797
        y: 4534
      positionAbsolute:
        x: 4797
        y: 4534
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: end with
            id: 07976545-e75c-4ff6-8244-90b914b61a07
            value: 否
            varType: string
            variable_selector:
            - '1754444128338'
            - text
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 是否指定查询条件（3）
        type: if-else
      height: 126
      id: '1754444207354'
      position:
        x: 5131
        y: 4472
      positionAbsolute:
        x: 5131
        y: 4472
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import re\nimport json\n\ndef main(arg1: [], arg2: str):\n    if not\
          \ arg1 or not arg2:\n        return arg1\n    table = json.loads(arg1[0]['content'])['tables']\n\
          \    sql = arg2\n    \n    # 正则表达式匹配 FROM 子句后的表名\n    # 处理 \"FROM table_name\"\
          \ 和 \"FROM    table_name\" 等情况\n    pattern = r'\\bFROM\\s+([^\\s,;)(]+)'\n\
          \    table_match = re.search(pattern, sql, re.IGNORECASE)\n    table_name\
          \ = table_match.group(1) if table_match else None\n    \n    # 提取查询字段（假设简单的SELECT字段列表）\n\
          \    fields = re.findall(r'SELECT\\s+(.+?)\\s+FROM', sql, re.IGNORECASE\
          \ | re.DOTALL)\n    selected_columns = [col.strip() for col in fields[0].split(',')]\
          \ if fields else []\n    \n    # 查找匹配表\n    matched_table = next((t for\
          \ t in table if t['name'] == table_name), None)\n\n    if not matched_table:\n\
          \        return None\n\n    # 过滤出需要的字段\n    filtered_columns = []\n    for\
          \ col in matched_table['columns']:\n        if col['name'] in selected_columns:\n\
          \            # 构造简化的列信息\n            simplified_col = {\n              \
          \  \"name\": col['name'],\n                \"description\": col['description']\n\
          \            }\n            filtered_columns.append(simplified_col)\n  \
          \  \n    # 构造简化表结构\n    table_info = {\n        \"name\": matched_table['name'],\n\
          \        \"description\": matched_table['description'],\n        \"columns\"\
          : filtered_columns\n    }\n    return {\"result\": str(table_info)}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 简化表结构1
        type: code
        variables:
        - value_selector:
          - '1754378740963'
          - result
          variable: arg1
        - value_selector:
          - '1754379719919'
          - result
          variable: arg2
      height: 54
      id: '1754893849408'
      position:
        x: 10141
        y: 6251
      positionAbsolute:
        x: 10141
        y: 6251
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import re\nimport json\n\ndef main(arg1: [], arg2: str):\n    if not\
          \ arg1 or not arg2:\n        return arg1\n    table = json.loads(arg1[0]['content'])['tables']\n\
          \    sql = arg2\n    \n    # 正则表达式匹配 FROM 子句后的表名\n    # 处理 \"FROM table_name\"\
          \ 和 \"FROM    table_name\" 等情况\n    pattern = r'\\bFROM\\s+([^\\s,;)(]+)'\n\
          \    table_match = re.search(pattern, sql, re.IGNORECASE)\n    table_name\
          \ = table_match.group(1) if table_match else None\n    \n    # 提取查询字段（假设简单的SELECT字段列表）\n\
          \    fields = re.findall(r'SELECT\\s+(.+?)\\s+FROM', sql, re.IGNORECASE\
          \ | re.DOTALL)\n    selected_columns = [col.strip() for col in fields[0].split(',')]\
          \ if fields else []\n    \n    # 查找匹配表\n    matched_table = next((t for\
          \ t in table if t['name'] == table_name), None)\n\n    if not matched_table:\n\
          \        return None\n\n    # 过滤出需要的字段\n    filtered_columns = []\n    for\
          \ col in matched_table['columns']:\n        if col['name'] in selected_columns:\n\
          \            # 构造简化的列信息\n            simplified_col = {\n              \
          \  \"name\": col['name'],\n                \"description\": col['description']\n\
          \            }\n            filtered_columns.append(simplified_col)\n  \
          \  \n    # 构造简化表结构\n    table_info = {\n        \"name\": matched_table['name'],\n\
          \        \"description\": matched_table['description'],\n        \"columns\"\
          : filtered_columns\n    }\n    return {\"result\": str(table_info)}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 简化表结构2
        type: code
        variables:
        - value_selector:
          - '1754378740963'
          - result
          variable: arg1
        - value_selector:
          - '1754380250676'
          - result
          variable: arg2
      height: 54
      id: '1754893916440'
      position:
        x: 10141
        y: 6573
      positionAbsolute:
        x: 10141
        y: 6573
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import re\nimport json\n\ndef main(arg1: [], arg2: str):\n    if not\
          \ arg1 or not arg2:\n        return arg1\n    table = json.loads(arg1[0]['content'])['tables']\n\
          \    sql = arg2\n    \n    # 正则表达式匹配 FROM 子句后的表名\n    # 处理 \"FROM table_name\"\
          \ 和 \"FROM    table_name\" 等情况\n    pattern = r'\\bFROM\\s+([^\\s,;)(]+)'\n\
          \    table_match = re.search(pattern, sql, re.IGNORECASE)\n    table_name\
          \ = table_match.group(1) if table_match else None\n    \n    # 提取查询字段（假设简单的SELECT字段列表）\n\
          \    fields = re.findall(r'SELECT\\s+(.+?)\\s+FROM', sql, re.IGNORECASE\
          \ | re.DOTALL)\n    selected_columns = [col.strip() for col in fields[0].split(',')]\
          \ if fields else []\n    \n    # 查找匹配表\n    matched_table = next((t for\
          \ t in table if t['name'] == table_name), None)\n\n    if not matched_table:\n\
          \        return None\n\n    # 过滤出需要的字段\n    filtered_columns = []\n    for\
          \ col in matched_table['columns']:\n        if col['name'] in selected_columns:\n\
          \            # 构造简化的列信息\n            simplified_col = {\n              \
          \  \"name\": col['name'],\n                \"description\": col['description']\n\
          \            }\n            filtered_columns.append(simplified_col)\n  \
          \  \n    # 构造简化表结构\n    table_info = {\n        \"name\": matched_table['name'],\n\
          \        \"description\": matched_table['description'],\n        \"columns\"\
          : filtered_columns\n    }\n    return {\"result\": str(table_info)}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 简化表结构3
        type: code
        variables:
        - value_selector:
          - '1754378740963'
          - result
          variable: arg1
        - value_selector:
          - '1754380544396'
          - result
          variable: arg2
      height: 54
      id: '1754893967984'
      position:
        x: 10141
        y: 6895
      positionAbsolute:
        x: 10141
        y: 6895
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        output_type: string
        selected: false
        title: 变量聚合器 2
        type: variable-aggregator
        variables:
        - - '1754893849408'
          - result
        - - '1754893916440'
          - result
        - - '1754893967984'
          - result
      height: 152
      id: '1754894019944'
      position:
        x: 11143
        y: 6504
      positionAbsolute:
        x: 11143
        y: 6504
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 设备缺陷数据2
        tool_configurations:
          db_name:
            type: constant
            value: platform_new
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: platform_new
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          schema:
            type: mixed
            value: ''
          sql:
            type: mixed
            value: '{{#1753353082019.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17549968869940'
      position:
        x: 10141
        y: 5290
      positionAbsolute:
        x: 10141
        y: 5290
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 设备缺陷数据1
        tool_configurations:
          db_name:
            type: constant
            value: platform_new
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: platform_new
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          schema:
            type: mixed
            value: ''
          sql:
            type: mixed
            value: '{{#1752040655415.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17549969665540'
      position:
        x: 10141
        y: 4968
      positionAbsolute:
        x: 10141
        y: 4968
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 查询两票表1
        tool_configurations:
          db_name:
            type: constant
            value: platform_new
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: platform_new
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: json
          schema:
            type: mixed
            value: ''
          sql:
            type: mixed
            value: '{{#1754379719919.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17549970221300'
      position:
        x: 10475
        y: 6068
      positionAbsolute:
        x: 10475
        y: 6068
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 查询两票表2
        tool_configurations:
          db_name:
            type: constant
            value: platform_new
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: platform_new
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: json
          schema:
            type: mixed
            value: ''
          sql:
            type: mixed
            value: '{{#1754380250676.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17549970763540'
      position:
        x: 10475
        y: 6390
      positionAbsolute:
        x: 10475
        y: 6390
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 查询两票表3
        tool_configurations:
          db_name:
            type: constant
            value: platform_new
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: platform_new
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: json
          schema:
            type: mixed
            value: ''
          sql:
            type: mixed
            value: '{{#1754380544396.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17549971451780'
      position:
        x: 10475
        y: 6712
      positionAbsolute:
        x: 10475
        y: 6712
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          label:
            en_US: Database type
            ja_JP: Database type
            pt_BR: Database type
            zh_Hans: 数据库类型
          llm_description: Database type
          max: null
          min: null
          name: db_type
          options:
          - label:
              en_US: MySQL
              ja_JP: MySQL
              pt_BR: MySQL
              zh_Hans: MySQL
            value: mysql
          - label:
              en_US: PostgreSQL
              ja_JP: PostgreSQL
              pt_BR: PostgreSQL
              zh_Hans: PostgreSQL
            value: postgresql
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          label:
            en_US: Database ip/host
            ja_JP: Database ip/host
            pt_BR: Database ip/host
            zh_Hans: 数据库IP/域名
          llm_description: Database ip/host
          max: null
          min: null
          name: host
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          label:
            en_US: Database port
            ja_JP: Database port
            pt_BR: Database port
            zh_Hans: 数据库端口
          llm_description: Database port
          max: 65535
          min: 1
          name: port
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          label:
            en_US: Database name
            ja_JP: Database name
            pt_BR: Database name
            zh_Hans: 数据库名称
          llm_description: Database name
          max: null
          min: null
          name: db_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          label:
            en_US: Username
            ja_JP: Username
            pt_BR: Username
            zh_Hans: 用户名
          llm_description: Username
          max: null
          min: null
          name: username
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: form
          human_description:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          label:
            en_US: Password
            ja_JP: Password
            pt_BR: Password
            zh_Hans: 密码
          llm_description: Password
          max: null
          min: null
          name: password
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: secret-input
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          label:
            en_US: Schema name
            ja_JP: Schema name
            pt_BR: Schema name
            zh_Hans: 数据库Schema PGSQL用户选填，默认为public
          llm_description: Schema name
          max: null
          min: null
          name: schema
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Fetching data from the database using natural language.
            ja_JP: Fetching data from the database using natural language.
            pt_BR: Fetching data from the database using natural language.
            zh_Hans: Fetching data from the database using natural language.
          label:
            en_US: SQL string
            ja_JP: SQL string
            pt_BR: SQL string
            zh_Hans: 待执行的 SQL 语句
          llm_description: Fetching data from the database using natural language.
          max: null
          min: null
          name: sql
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: json
          form: form
          human_description:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          label:
            en_US: result_format
            ja_JP: result_format
            pt_BR: result_format
            zh_Hans: 返回数据格式
          llm_description: result_format
          max: null
          min: null
          name: result_format
          options:
          - label:
              en_US: JSON
              ja_JP: JSON
              pt_BR: JSON
              zh_Hans: JSON
            value: json
          - label:
              en_US: TEXT
              ja_JP: TEXT
              pt_BR: TEXT
              zh_Hans: TEXT
            value: text
          - label:
              en_US: CSV
              ja_JP: CSV
              pt_BR: CSV
              zh_Hans: CSV
            value: csv
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: select
        params:
          db_name: ''
          db_type: ''
          host: ''
          password: ''
          port: ''
          result_format: ''
          schema: ''
          sql: ''
          username: ''
        provider_id: jaguarliuu/rookie_text2data/rookie_text2data
        provider_name: jaguarliuu/rookie_text2data/rookie_text2data
        provider_type: builtin
        selected: false
        title: 设备缺陷数据3
        tool_configurations:
          db_name:
            type: constant
            value: platform_new
          db_type:
            type: constant
            value: postgresql
          host:
            type: constant
            value: 10.194.2.23
          password:
            type: constant
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          username:
            type: constant
            value: db_readonly_user
        tool_description: sql 执行器
        tool_label: rookie_excute_sql
        tool_name: rookie_excute_sql
        tool_node_version: '2'
        tool_parameters:
          db_name:
            type: mixed
            value: platform_new
          db_type:
            type: constant
            value: postgresql
          host:
            type: mixed
            value: 10.194.2.23
          password:
            type: mixed
            value: Bldc@2024!@#
          port:
            type: constant
            value: 5432
          result_format:
            type: constant
            value: text
          schema:
            type: mixed
            value: ''
          sql:
            type: mixed
            value: '{{#17533228654580.result#}}'
          username:
            type: mixed
            value: db_readonly_user
        type: tool
      height: 282
      id: '17549972269860'
      position:
        x: 10141
        y: 5612
      positionAbsolute:
        x: 10141
        y: 5612
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: -1277.7293877651766
      y: 207.19820801186862
      zoom: 0.5743491774985184
